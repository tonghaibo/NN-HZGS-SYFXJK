<?xml version="1.0" encoding="GBK"?>
<dataFlow name="加工及调整的汇总" ID="MOMJ2MC">
	<BilFlw name="生成目标定义">
		<ROWSET>
			<ROW name="记录">
				<DESTCLS name="待生成的目标单据">MC</DESTCLS>
				<ValFld name="目标单据的字段">REFID1</ValFld>
				<MappedMode name="单据映射关系。0:(默认)多对一映射；1:一对一映射"></MappedMode>
				<WriteBack name="修改目标单据时，是否回写数据流状态。0:不回写;1(默认):回写">0</WriteBack>
				<Filter name="数据过滤模式。0:(默认)不处理；1:对itemid相同的明细做分组汇总"></Filter>
				<OnConvertDtl name="datflwsta表中的一行记录转换到目标单据的xmlds中后发生">//
  //可用对象:eaContext,usrinf,srcdtl(源单据明细),bilhdr(目标单据的单据头)
  //      bildtl(目标单据的明细),dtlrowno(当前的目标明细行号)
  //      flwstads(用户选择的数据流状态，包含字段：SRCBILTYP, SRCBIL, SRCBILSEQ,VALLEFT,val2Convert, MEMO1,MEMO2,GUID,refid1,refid2,refid3)
  //      flwstaidx(当前状态行)
//  throw new Exception(flwstads.getStringAt(flwstaidx,"SRCBILTYP"));
  var pub = new JavaPackage("com.xlsgrid.net.pub");
  var checked=eaContext.getAttribute("_checked");
  if(checked==null)
  {
    eaContext.setAttribute("_checked","1");
    var c = flwstads.getRowCount();
    var oldid="";//flwstads.getStringAt(0,"refid2");
    var bils = "";
    for(var i=0;i&amp;lt;c;i++)
    {
      var typ = flwstads.getStringAt(i,"SRCBILTYP");
      if(typ=="MO")
      {
        if (bils != "") bils += ",";
        bils += "&amp;apos;"+flwstads.getStringAt(i,"SRCBIL")+"&amp;apos;";
        var id=flwstads.getStringAt(i,"refid2");//加工成品编码
        if(id!=oldid &amp;&amp; oldid !="")
          throw new Exception("您选择了多个不同的加工成品，不能合并在一汇总单中，请重新选择。");
        oldid = id;
      }
//      else throw new Exception(""+i+","+typ);
    }
      pub.EAFunc.asserts(oldid!="","必须至少选择一张加工单。");
      var untnum = pub.EADbTool.GetSQL("select untnum from item where id=&amp;apos;"+oldid+"&amp;apos;");
      bilhdr.setValueAt(0,"untnum",untnum);
      var sql = "select sum(REFNAM1) from bilhdr where acc=&amp;apos;"+eaContext.getAccid()+"&amp;apos; and biltyp=&amp;apos;MO&amp;apos; and bilid in ("+bils +")";
      //throw new Exception(sql );
      var sumqty = 1.0 * pub.EADbTool.GetSQL(sql);
      bilhdr.setValueAt(0,"REFNAM1",sumqty);
      //var date = pub.EAFunc.DateToStr();
      var date=srchdr.getStringAt(0,"dat");
      //throw new Exception(""+date);
      sql = "select itmpri from finsum where acc=&amp;apos;"+eaContext.getAccid()+"&amp;apos; and item=(select guid from item where id=&amp;apos;"+oldid+"&amp;apos;)and yymm=to_char(ADD_MONTHS(to_date(&amp;apos;"+date+"&amp;apos;,&amp;apos;yyyy-mm-dd&amp;apos;),-1),&amp;apos;yymm&amp;apos;)";
      var pri =0;
      try{
      pri = pub.EADbTool.GetSQL(sql);
      }
      catch(e){}
      bilhdr.setValueAt(0,"itmunit", bilhdr.getStringAt(0,"REFID1"));
      bilhdr.setValueAt(0,"REFID1",pri );
      bilhdr.setValueAt(0,"NOTE",1.0*sumqty * pri );
      //计算加工费
      sql = "select sum(REFNAM2) from bilhdr where acc=&amp;apos;"+eaContext.getAccid()+"&amp;apos; and biltyp=&amp;apos;MO&amp;apos; and bilid in ("+bils +")";
      var summny = 1.0*pub.EADbTool.GetSQL(sql);
      bilhdr.setValueAt(0,"REFNAM2",summny);
      bilhdr.setValueAt(0,"REFID2",pub.EAFunc.Round(summny/sumqty*untnum,2));
      
      //throw new Exception(srchdr.GetXml());
  }
  //throw new Exception(bildtl.GetXml());
  var date=srchdr.getStringAt(0,"dat");
  var itmid=bildtl.getStringAt(dtlrowno,"itmid");
  var sql = "select itmpri from finsum where acc=&amp;apos;"+eaContext.getAccid()+"&amp;apos; and item=(select guid from item where id=&amp;apos;"+itmid+"&amp;apos;)and yymm=to_char(ADD_MONTHS(to_date(&amp;apos;"+date+"&amp;apos;,&amp;apos;yyyy-mm-dd&amp;apos;),-1),&amp;apos;yymm&amp;apos;)";
  var pri =0;
  try{
      pri = 1.0*pub.EADbTool.GetSQL(sql);
   } catch(e){}
  bildtl.setValueAt(dtlrowno,"PRICE",pri);
  var typ = bildtl.getStringAt(dtlrowno,"BILTYP");
  //gld 07-1-5修改
  var sqty = bildtl.getStringAt(dtlrowno,"REFID1");//REFID1用来保存数据流的原值
  bildtl.setValueAt(dtlrowno,"QTY",sqty);//QTY保存转换后的耗用数
  var qty = 1.0*sqty;
  var untnum=0;
  try{ //每次总是一行来源明细
  untnum = 1.0*srcdtl.getStringAt(0,"untnum");
  }
  catch(e){
  throw new Exception(srcdtl.GetXml());
  }
  //throw new Exception(""+untnum);
  bildtl.setValueAt(dtlrowno,"MNY",pub.EAFunc.Round(qty/untnum * pri,2));//耗用
  bildtl.setValueAt(dtlrowno,"untnum",untnum );
  //bildtl.setValueAt(i,"refid1",untnum );
  if(typ=="MO")
    bildtl.setValueAt(dtlrowno,"TAXTYP",qty);//耗用
  else
  {
    bildtl.setValueAt(dtlrowno,"NOTAXMNY",-1.0*qty);//损耗
    bildtl.setValueAt(dtlrowno,"QTY",-1.0*qty);//负损耗要增加耗用
  }
    //end of func</OnConvertDtl>
				<OnConvert name="所有来源转换到目标单据后，保存到数据库前发生">//
  //可用对象:eaContext,usrinf,bilhdr(目标单据的单据头),bildtl(目标单据的明细)
  //      flwstads(用户选择的数据流状态，包含字段：SRCBILTYP, SRCBIL, SRCBILSEQ,VALLEFT,val2Convert, MEMO1,MEMO2,GUID)
//throw new Exception(bildtl.GetXml());
				//</OnConvert>
				<OnDelete name="删除目标单据时发生" comment="可用对象:eaContext,_EADB"></OnDelete>
				<DESC name="数据流描述"></DESC>
				<REFID1 NAME="扩展字段REFID1用途">LOCID</REFID1>
				<REFNAM1 NAME="扩展字段REFNAM1用途">LOCNAM</REFNAM1>
				<REFID2 NAME="扩展字段REFID2用途">CORPID</REFID2>
				<REFNAM2 NAME="扩展字段REFNAM2用途">CORPNAM</REFNAM2>
</ROW>
</ROWSET>
</BilFlw>
	<srcBil name="来源单据信息">
		<ROWSET>
			<ROW name="记录">
				<SRCCLS name="可转换的单据">MO</SRCCLS>
				<ConvertMod name="单据转换模式:0=(默认)明细转换;1=整单转换;2=仅转换单据头"></ConvertMod>
				<ValFld name="待转换的字段：如果模式＝2，则该字段是单据头字段">qty</ValFld>
				<where name="datflwsta表的过滤条件"></where>
				<OnBeforeGenSta name="开始构造datsta前发生，用于单据预处理。" comment="可用对象:eaContext,_EADB,bilhdr,bildtl(单据数据集)"></OnBeforeGenSta>
				<OnGenStaMemo name="构造bilfwsta的备注信息时发生" comment="可用对象:sta(0:单据头;1:明细),ds(单据数据集),row(当前行号);返回MEMO1或MEMO2,如果返回空字符,用默认的说明信息">//
  //可用对象:sta(0:单据头;1:明细),ds(单据数据集),row(当前行号);
  //返回MEMO1或MEMO2,如果返回空字符,用默认的说明信息
  //如果把ds的BILID或ITMID清空，则跳过该单据或明细
  //如果要保存额外信息到  datflwsta 中,请当sta=0时设置ds的字段,后台处理时回自动保存到
  //对应的 datflwsta 字段中:
  //  LOCID  --  REFID1      LOCNAM  --  REFNAM1
  //  CORPID --  REFID2      CORPNAM --  REFNAM2
  //  SUBTYP --  SRCSUBTYP
  var pub = new JavaPackage("com.xlsgrid.net.pub");
  if(sta==1)
  {
    return "";
  }
  else
  {
    var itmid = ds.getStringAt(0,"CORPID");
    var untnum = pub.EADbTool.GetSQL("select untnum from item where id=&amp;apos;"+itmid +"&amp;apos;");
    var 成品数量 = 1.0 * ds.getStringAt(0,"REFNAM1")/untnum ; 
    return "加工成品："+itmid+" "+ds.getStringAt(0,"CORPNAM")+" 成品数量："+成品数量+" 存储仓库："+ds.getStringAt(0,"LOCNAM");
  }
  //end of func
				//</OnGenStaMemo>
				<OnUnCkeck name="单据取消审核时发生" comment="可用对象:eaContext,_EADB"></OnUnCkeck>
</ROW>
			<ROW name="记录">
				<SRCCLS name="可转换的单据">MJ</SRCCLS>
				<ConvertMod name="单据转换模式:0=(默认)明细转换;1=整单转换;2=仅转换单据头"></ConvertMod>
				<ValFld name="待转换的字段：如果模式＝2，则该字段是单据头字段">qty</ValFld>
				<where name="datflwsta表的过滤条件"></where>
				<OnBeforeGenSta name="开始构造datsta前发生，用于单据预处理。" comment="可用对象:eaContext,_EADB,bilhdr,bildtl(单据数据集)"></OnBeforeGenSta>
				<OnGenStaMemo name="构造bilfwsta的备注信息时发生" comment="可用对象:sta(0:单据头;1:明细),ds(单据数据集),row(当前行号);返回MEMO1或MEMO2,如果返回空字符,用默认的说明信息"></OnGenStaMemo>
				<OnUnCkeck name="单据取消审核时发生" comment="可用对象:eaContext,_EADB"></OnUnCkeck>
</ROW>
</ROWSET>
</srcBil>
</dataFlow>
