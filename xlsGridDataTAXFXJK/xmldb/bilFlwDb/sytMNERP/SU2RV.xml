<?xml version="1.0" encoding="GBK"?>
<dataFlow name="模板" ID="temp">
	<BilFlw name="生成目标定义">
		<ROWSET>
			<ROW name="记录">
				<DESC name="数据流描述"></DESC>
				<DESTCLS name="待生成的目标单据">RV</DESTCLS>
				<ValFld name="目标单据的字段">QTY</ValFld>
				<Filter name="数据过滤模式。0:(默认)不处理；1:对itemid相同的明细做分组汇总"></Filter>
				<MappedMode name="单据映射关系。0:(默认)多源单据对一目标单据映射；1:一对一映射">0</MappedMode>
				<WriteBack name="修改目标单据时，是否回写数据流状态。0:不回写;1(默认):回写"></WriteBack>
				<SrcHdrFlds name="源单据头的转换">SUBTYP,CORPID,CORPNAM,LOCID,LOCNAM,NOTE,REFID1,REFNAM1,REFID2,REFNAM2</SrcHdrFlds>
				<DestHdrFlds name="目标单据的对应转换字段">SUBTYP,CORPID,CORPNAM,LOCID,LOCNAM,NOTE,REFID1,REFNAM1,REFID2,REFNAM2</DestHdrFlds>
				<OnConvertDtl name="datflwsta表中的一行记录转换到目标单据的xmlds中后发生">//
  //可用对象:eaContext,usrinf,srchdr,srcdtl(源单据明细),bilhdr(目标单据的单据头)
  //      bildtl(目标单据的明细),dtlrowno(当前的目标明细行号)
  //      flwstads(用户选择的数据流状态，包含字段：SRCBILTYP, SRCBIL, SRCBILSEQ,VALLEFT,val2Convert, MEMO1,MEMO2,GUID)
  //      flwstaidx(当前状态行)
   var pubpack = new JavaPackage("com.xlsgrid.net.pub" );
  var bil_id="&amp;apos;"+srcdtl.getStringAt(0,"bilid")+"&amp;apos;";  
  var oldbilid=eaContext.getAttribute("bil_id");
  if(oldbilid==""||oldbilid==null) {
       eaContext.setAttribute("bil_id",bil_id);        	
  } else { 
        var a=pubpack.EAFunc.SplitString(oldbilid,",");
        var flag=0; 
        for(var i=0;i&amp;lt;a.length();i++) {
             
              if(a[i]==bil_id) {
                    flag=1;
                    break;
              } else {
              
              }
              
        }
        if(flag==0) {
              bil_id=bil_id+","+oldbilid;
              eaContext.setAttribute("bil_id",bil_id);
        } else {
              
        } 
  }
  
  var locid=srcdtl.getStringAt(0,"locid");
  if(eaContext.getAttribute("loc_id")==""||eaContext.getAttribute("loc_id")==null) {
        eaContext.setAttribute("loc_id",locid);
  } else {
  
  }
  var dat=srcdtl.getStringAt(0,"dat");
  if(eaContext.getAttribute("dest_dat")==""||eaContext.getAttribute("dest_dat")==null) {
        eaContext.setAttribute("dest_dat",dat);
  } else {
  
  }
  //end of func</OnConvertDtl>
				<OnConvert name="所有来源转换到目标单据后，保存到数据库前发生">//
  //可用对象:eaContext,usrinf,srchdr,bilhdr(目标单据的单据头),bildtl(目标单据的明细)
  //      flwstads(用户选择的数据流状态，包含字段：SRCBILTYP, SRCBIL, SRCBILSEQ,VALLEFT,val2Convert, MEMO1,MEMO2,GUID)
  //设置表头相关信息           
        /*
        var srctyp=flwstads.getStringAt(flwstaidx,"SRCBILTYP");         
        var srcid = srctyp + "." + flwstads.getStringAt(flwstaidx,"SRCBIL");
        //throw new Exception(srcid);  
        var bilid=flwstads.getStringAt(flwstaidx,"SRCBIL");
        eaContext.setBilid(bilid); 
        bilhdr.setValueAt(0,"REFID1",srcid);  
        //设置单据类型 
        var typ = flwstads.getStringAt(flwstaidx,"SRCBILTYP"); 
        bilhdr.setValueAt(0,"SUBTYP",typ); 
        var LOCID = srcdtl.getStringAt(0,"LOCID"); 
        //throw new Exception(LOCID);
        bilhdr.setValueAt(0,"LOCID",LOCID); 
        //设置目标单据的日期位：DAT 
        var dat=srchdr.getStringAt(0,"DAT");         
        bilhdr.setValueAt(0,"DAT",dat); 
        */ 
        bilhdr.setValueAt(0,"REFID1","");
        var dat=eaContext.getAttribute("dest_dat");
        bilhdr.setValueAt(0,"DAT",dat);
        var locid=eaContext.getAttribute("loc_id");
        bilhdr.setValueAt(0,"LOCID",locid);
        bilhdr.setValueAt(0,"SUBTYP","SU");
        var bilid=eaContext.getAttribute("bil_id");
	//设置明细相关信息
        var pubpack = new JavaPackage("com.xlsgrid.net.pub" ); 
        var db = eaContext.getEADatabase();
       // var locid = bilhdr.getStringAt(0,"LOCID");
        var slotid1 = "";
        var slotname1 = "";
        var slotid2 = "";
        var slotname2 = "";
        var cnt=1*db.GetSQL("select count(distinct locid) from v_sh_sudtl where bilid in ( "+bilid+")");
        //throw new Exception(cnt);
        if(cnt!=1) {
              throw new Exception("回执合并必须为同一仓库，请检查确认");
        }
        // throw new Exception(locid);
        var sql1= "SELECT NVL(slot.id,&amp;apos;&amp;apos;) SLOTID,NVL(slot.name,&amp;apos;&amp;apos;) SLOTNAME from loc,slot where loc.guid=slot.loc(+) and loc.DEFSLT3=slot.guid(+) and loc.id=&amp;apos;"+locid+"&amp;apos;";
        var sql2 = "SELECT NVL(slot.id,&amp;apos;&amp;apos;) SLOTID,NVL(slot.name,&amp;apos;&amp;apos;) SLOTNAME from loc,slot where loc.guid=slot.loc(+) and loc.DEFSLT7=slot.guid(+) and loc.id=&amp;apos;"+locid+"&amp;apos;";
        var ds1 = db.QuerySQL(sql1);
        var ds2 = db.QuerySQL(sql2);
        if (ds1!=null &amp;&amp; ds1.getRowCount() &amp;gt; 0 )  {
             slotid1  =  ds1.getStringAt(0,"SLOTID");
             slotname1  =  ds1.getStringAt(0,"SLOTNAME");
        }     
        if (ds2!=null &amp;&amp; ds2.getRowCount() &amp;gt; 0 )  {
             slotid2  =  ds2.getStringAt(0,"SLOTID");
             slotname2  =  ds2.getStringAt(0,"SLOTNAME");
        }     
        //处理明细
        // throw new Exception(sql1+"vs"+sql2);
        var accid=eaContext.getAccid();
        /*
        var sql = //" select a.acc acc,a.syt syt,a.org org,a.bilid bilid,&amp;apos;RV&amp;apos; as biltyp,a.subtyp subtyp,a.refid as corpid ,a.locid locid,a.dat dat ,a.soseq seqid,\n"+  
                  " select a.acc acc,a.syt syt,a.org org,&amp;apos;&amp;apos; as bilid,&amp;apos;RV&amp;apos; as biltyp,&amp;apos;SU&amp;apos; as subtyp,a.refid as corpid,a.locid locid,a.dat dat,&amp;apos;&amp;apos; as seqid,\n"+  
                 // " a.itemid itmid,a.itemname itmnam,a.itemspec itmspc,a.unit unit,a.smlunt smlunt,a.tonnum tonnum,a.untnum untnum,0 as price, \n"+
                  " a.itemid itmid,a.itemname itmnam,a.itemspec itmspc,a.unit unit,a.smlunt smlunt,a.tonnum tonnum,a.untnum untnum,nvl(a.ITEMSORTID1,&amp;apos;9999&amp;apos;) as price,\n"+ 
                  //" sum(nvl(a.oldqty,&amp;apos;0&amp;apos;)) oldqty,sum(nvl(a.qty,&amp;apos;0&amp;apos;)) qty,0 as taxtyp,0 notaxmny,0 taxmny,\n"+
                  " nvl(a.oldqty,&amp;apos;0&amp;apos;) oldqty,nvl(a.qty,&amp;apos;0&amp;apos;) qty,0 as taxtyp,0 notaxmny,0 taxmny,\n"+ 
                  //" 0 mny,&amp;apos;&amp;apos; as refid1,&amp;apos;&amp;apos; as refid2,&amp;apos;&amp;apos; as refnam1,nvl(a.sctype,&amp;apos;1&amp;apos;) as refnam2 ,b.smlunt itmsmlunt, &amp;apos;&amp;apos; as datflw\n"+
                  //" 0 mny,&amp;apos;&amp;apos; as refid1,&amp;apos;&amp;apos; as refid2,&amp;apos;&amp;apos; as refnam1,&amp;apos;&amp;apos; as refnam2 ,b.smlunt itmsmlunt, &amp;apos;&amp;apos; as datflw\n"+ 
                  " 0 mny,&amp;apos;&amp;apos; as refid1,a.bilid as refid2,&amp;apos;&amp;apos; as refnam1,&amp;apos;&amp;apos; as refnam2,b.smlunt itmsmlunt,&amp;apos;&amp;apos; as datflw\n"+ 
                  //" from v_sh_sudtl a,v_sh_item b \n"+改为按财务统计方式
                  " from v_fi_sudtl a,v_fiitem b \n"+ 
                  " where a.bilid in ( "+bilid+") and a.itemid=b.id and a.oldqty is not null and a.oldqty!=a.qty \n"+
		  " and acc=&amp;apos;"+accid+"&amp;apos; \n"+
		 // " group by a.acc,a.syt,a.org,a.refid,a.locid,a.dat,a.itemid,a.itemname,a.itemspec,a.unit,a.smlunt,a.tonnum,a.untnum,b.smlunt,a.ITEMSORTID1,sign(a.qty) \n"+
		  " order by a.refid,a.bilid,nvl(a.ITEMSORTID1,&amp;apos;9999&amp;apos;) \n";
		 // " and soseq=&amp;apos;"+seqid+"&amp;apos; \n";
		   // 	  throw new Exception(sql);   
       
       // throw new Exception(sql);  
        bildtl.clearDS(); 
        var dss=db.QuerySQL(sql);  
        bildtl.copyfrom(dss); 
        */
       // throw new Exception(bildtl.GetXml()); 
        var cnt=bildtl.getRowCount();
        //throw new Exception(bildtl.getRowCount());
        for(var row=0;row&amp;lt;cnt;row++) {            	
              //var dqty = 1.0*bildtl.getValueAt(i,"oldqty")-1.0*bildtl.getValueAt(i,"qty");
              var dqty = 1.0*bildtl.getValueAt(row,"NOTAXMNY"); 
              var itmid=bildtl.getValueAt(row,"ITMID");
              var sql = " select  ITMID ITMID,ITMNAM ITMNAM,ITMSPC ITMSPC,UNIT UNIT,REFID,\n"+
                    " &amp;apos;"+dqty+"&amp;apos;*CASE WHEN UNTNUM=1 AND TMPUNTNUM!=1 THEN TMPUNTNUM ELSE 1 END QTY,\n"+
                    " nvl(CASE WHEN UNTNUM=1 AND TMPUNTNUM!=1 THEN TMPSMLUNT ELSE SMLUNT END,1) SMLUNT ,\n"+
                    " nvl(CASE WHEN UNTNUM=1 AND TMPUNTNUM!=1 THEN TMPUNTNUM ELSE UNTNUM END,1) UNTNUM \n"+ 
                    " FROM \n"+
                    " ( \n"+
                    "       select FIITEM.ID ITMID,FIITEM.NAME ITMNAM,FIITEM.SPEC ITMSPC,B.FINunit unit,FIITEM.sortid1 itemsortid1,\n"+
                    "       FIITEM.SMLUNT SMLUNT,B.untnum*b.FINuntnum untnum,FIITEM.SMLUNT TMPSMLUNT,FIITEM.UNTNUM TMPUNTNUM,\n"+
                    "       FIITEM.TONNUM TONNUM,\n"+
                    "       FIitem.REFID,FIitem.BASCAT2 ITEMBASCAT2,FIitem.SORTID ITEMSORTID\n"+
                    "       from ITEM B, FIitem FIitem \n"+
                    "       where b.id =&amp;apos;"+itmid+"&amp;apos; and b.FINid=FIitem.id \n"+ 
                    " ) \n";
                    
              var ds=db.QuerySQL(sql);                    
              bildtl.setValueAt(row,"ITMID",ds.getValueAt(0,"ITMID"));
              bildtl.setValueAt(row,"ITMNAM",ds.getValueAt(0,"ITMNAM"));
              bildtl.setValueAt(row,"ITMSPC",ds.getValueAt(0,"ITMSPC"));
              bildtl.setValueAt(row,"UNIT",ds.getValueAt(0,"UNIT"));
              bildtl.setValueAt(row,"UNTNUM",ds.getValueAt(0,"UNTNUM"));
              //bildtl.setValueAt(row,"QTY",ds.getValueAt(0,"QTY")/ds.getValueAt(0,"UNTNUM"));                       
              bildtl.setValueAt(row,"SMLUNT",ds.getValueAt(0,"SMLUNT")); 
              bildtl.setValueAt(row,"CORPID",ds.getValueAt(0,"REFID")); 
              // throw new Exception("dkdkkd");
              var bilid=bildtl.getValueAt(row,"BILID");
              bildtl.setValueAt(row,"REFID2",bilid);
              
  	      bildtl.setValueAt( row,"taxtyp",dqty ); 
              //bildtl.setValueAt( i,"qty",1.0*bildtl.getValueAt(i,"oldqty")-1.0*bildtl.getValueAt(i,"qty") );
              //bildtl.setValueAt( i,"taxtyp",1.0*bildtl.getValueAt(i,"oldqty")-1.0*bildtl.getValueAt(i,"qty")); 
  	      //bildtl.setValueAt( i,"taxtyp",1.0*bildtl.getValueAt(i,"oldqty"));
  	      var refid=bildtl.getStringAt(row,"corpid");  		
              if ( refid == "1" ) {//throw new Exception(refid);
                    bildtl.setValueAt(row,"REFID1",slotid1 );
                    bildtl.setValueAt(row,"REFNAM1",slotname1 );
              } else {
                   bildtl.setValueAt(row,"REFID1",slotid2 );
                   bildtl.setValueAt(row,"REFNAM1",slotname2 );
              }
	      //bildtl.setValueAt(i,"REFID2","" );//这个地方是用来确定批次号的，有等确定
              // bildtl.setValueAt(i,"corpid","");
              // throw new Exception("dddkdkkd");
              ds.clearDS();               // bildtl.setValueAt( i,"qty",dqty  );
       } 
       //throw new Exception(bildtl.GetXml()); 
  //end of func</OnConvert>
				<OnDelete name="删除目标单据时发生">//
  //可用对象:eaContext,_EADB
  
  //end of func</OnDelete>
				<REFID1 NAME="扩展字段REFID1用途">LOCID</REFID1>
				<REFNAM1 NAME="扩展字段REFNAM1用途">LOCNAM</REFNAM1>
				<REFID2 NAME="扩展字段REFID2用途">CORPID</REFID2>
				<REFNAM2 NAME="扩展字段REFNAM2用途">CORPNAM</REFNAM2>
</ROW>
</ROWSET>
</BilFlw>
	<srcBil name="来源单据信息">
		<ROWSET>
			<ROW name="记录">
				<SRCCLS name="可转换的单据">SU</SRCCLS>
				<ValFld name="待转换的字段：如果模式＝2，则该字段是单据头字段">QTY</ValFld>
				<ConvertTimes name="数据流可转换的次数：0=(默认)不限制;1=转换一次后关闭(设置endflg＝2)">1</ConvertTimes>
				<ValueMod name="数据转换模式:0=(默认)不限制;1=限制大于0;2=限制不大于剩余可转数;3=模式1和2的组合">1</ValueMod>
				<ConvertMod name="单据转换模式:0=明细转换;1=(默认)整单转换;2=仅转换单据头;3=表头部分勾选">1</ConvertMod>
				<where name="datflwsta表的过滤条件"></where>
				<OnBeforeGenSta name="开始构造datsta前发生，用于单据预处理。">//
  //可用对象:eaContext,_EADB,bilhdr,bildtl(单据数据集)
  //如果把bilhdr的BILID或bildtl的ITMID清空，则跳过该单据或明细
        var pubpack = new JavaPackage("com.xlsgrid.net.pub" ); 
        var db = eaContext.getEADatabase();               
        var ds=null;
        var sql="";
        //throw new Exception(bildtl.GetXml());  
        var cnt=0;
        cnt=bildtl.getRowCount();
        var flg=0;
        for(var row=0;row&amp;lt;cnt;row++) {             
              var qty=1.0*bildtlraw.getValueAt(row,"NOTAXMNY"); 
              //throw new Exception(d
              //var taxtyp=1.0*bildtl.getValueAt(row,"TAXTYP");  
              //cnt++;
              if(qty==0) { 
                    bildtl.setValueAt(row,"ITMID","");
              } else {
                    flg++;
                    var itmid=bildtl.getValueAt(row,"ITMID");
                    var qty=bildtl.getValueAt(row,"NOTAXMNY");                    
                    sql = 
                        " select  ITMID ITMID,ITMNAM ITMNAM,ITMSPC ITMSPC,UNIT UNIT,REFID,\n"+
                        " &amp;apos;"+qty+"&amp;apos;*CASE WHEN UNTNUM=1 AND TMPUNTNUM!=1 THEN TMPUNTNUM ELSE 1 END QTY,\n"+
                        " nvl(CASE WHEN UNTNUM=1 AND TMPUNTNUM!=1 THEN TMPSMLUNT ELSE SMLUNT END,1) SMLUNT ,\n"+
                        " nvl(CASE WHEN UNTNUM=1 AND TMPUNTNUM!=1 THEN TMPUNTNUM ELSE UNTNUM END,1) UNTNUM \n"+ 
                        " FROM \n"+
                        " ( \n"+
                        "       select FIITEM.ID ITMID,FIITEM.NAME ITMNAM,FIITEM.SPEC ITMSPC,B.FINunit unit,FIITEM.sortid1 itemsortid1,\n"+
                        "       FIITEM.SMLUNT SMLUNT,B.untnum*b.FINuntnum untnum,FIITEM.SMLUNT TMPSMLUNT,FIITEM.UNTNUM TMPUNTNUM,\n"+
                        "       FIITEM.TONNUM TONNUM,\n"+
                        "       FIitem.REFID,FIitem.BASCAT2 ITEMBASCAT2,FIitem.SORTID ITEMSORTID\n"+
                        "       from ITEM B, FIitem FIitem \n"+
                        "       where b.id =&amp;apos;"+itmid+"&amp;apos; and b.FINid=FIitem.id \n"+ 
                        " ) \n";
                   // throw new Exception(sql);
                    ds=db.QuerySQL(sql);
                    //throw new Exception(sql);
                    /*
                    bildtl.setValueAt(row,"ITMID",ds.getValueAt(0,"ITMID"));
                    bildtl.setValueAt(row,"ITMNAM",ds.getValueAt(0,"ITMNAM"));
                    bildtl.setValueAt(row,"ITMSPC",ds.getValueAt(0,"ITMSPC"));
                    bildtl.setValueAt(row,"UNIT",ds.getValueAt(0,"UNIT"));
                    bildtl.setValueAt(row,"UNTNUM",ds.getValueAt(0,"UNTNUM"));
                    */
                    bildtlraw.setValueAt(row,"QTY",ds.getValueAt(0,"QTY"));
                    /*//ds.getValueAt(0,"UNTNUM")
                    bildtl.setValueAt(row,"SMLUNT",ds.getValueAt(0,"SMLUNT")); 
                    bildtl.setValueAt(row,"CORPID",ds.getValueAt(0,"REFID"));
                    // throw new Exception("dkdkkd");
                    */
                    ds.clearDS();                  
              }
        }
        //throw new Exception(bildtl.GetXml());
        //throw new Exception(""+flg+""+bildtl.GetXml());  
  //end of func</OnBeforeGenSta>
				<OnGenStaMemo name="构造bilfwsta的备注信息时发生">//
  //可用对象:sta(0:单据头;1:明细),ds(单据数据集),row(当前行号);
  //返回MEMO1或MEMO2,如果返回空字符,用默认的说明信息
  //如果把ds的BILID或ITMID清空，则跳过该单据或明细
  //如果要保存额外信息到  datflwsta 中,请当sta=0时设置ds的字段,后台处理时回自动保存到
  //对应的 datflwsta 字段中:
  //  LOCID  --  REFID1      LOCNAM  --  REFNAM1
  //  CORPID --  REFID2      CORPNAM --  REFNAM2
  //  SUBTYP --  SRCSUBTYP
  
  //end of func</OnGenStaMemo>
				<OnUnCkeck name="单据取消审核时发生">//
  //可用对象:eaContext,_EADB(EADatabase)
  
  //end of func</OnUnCkeck>
</ROW>
</ROWSET>
</srcBil>
</dataFlow>
