<?xml version="1.0" encoding="GBK"?>
<dataFlow name="销售转出货单" ID="SO2SH">
	<BilFlw name="生成目标定义">
		<ROWSET>
			<ROW name="记录">
				<DESTCLS name="待生成的目标单据">SH</DESTCLS>
				<ValFld name="目标单据的字段">qty</ValFld>
				<MappedMode name="单据映射关系。0:(默认)多对一映射；1:一对一映射"></MappedMode>
				<Filter name="数据过滤模式。0:(默认)不处理；1:对itemid相同的明细做分组汇总"></Filter>
				<OnConvertDtl name="datflwsta表中的一行记录转换到目标单据的xmlds中后发生" comment="可用对象:eaContext,usrinf,srcdtl(源单据明细),bilhdr(目标单据的单据头),bildtl(目标单据的明细),dtlrowno(当前的目标明细行号)"></OnConvertDtl>
				<OnConvert name="所有来源转换到目标单据后，保存到数据库前发生">//
  //可用对象:eaContext,usrinf,bilhdr(目标单据的单据头),bildtl(目标单据的明细)
  //      flwstads(用户选择的数据流状态，包含字段：SRCBILTYP, SRCBIL, SRCBILSEQ,VALLEFT,val2Convert, MEMO1,MEMO2,GUID)
  var checked=eaContext.getAttribute("_checked");
  var pubpack = new JavaPackage("com.xlsgrid.net.pub");	
  var db = new pubpack.EADatabase();
  var acc = bilhdr.getStringAt(0,"acc");
  if(checked==null)
  {
    eaContext.setAttribute("_checked","");
    var c = flwstads.getRowCount();
//    throw new Exception(c);
    var oldid=flwstads.getStringAt(0,"refid1");
//    throw new Exception(oldid);
    for(var i=1;i&amp;lt;c;i++)
    {
      var id=flwstads.getStringAt(i,"refid1");
      if(id!=oldid)
        throw new Exception("您选择了多个不同的仓库，不能合并在一张发货单中，请重新选择。");
    }
  }
  var srctyp = flwstads.getStringAt(flwstaidx,"SRCBILTYP");
  var srcid = srctyp + "." + flwstads.getStringAt(flwstaidx,"SRCBIL");
  var srcbilid = srcdtl.getStringAt(0,"bilid");
//throw new Exception(srcbilid+" "+srctyp+" "+acc );
//  var sql = "select refid5 from bilhdr where bilid = &amp;apos;"+srcbilid+"&amp;apos; and biltyp = &amp;apos;"+srctyp+"&amp;apos; and acc = &amp;apos;"+acc+"&amp;apos;":
  var refid = db.GetSQL("select nvl(refid5,&amp;apos;@@&amp;apos;) from bilhdr where bilid = &amp;apos;"+srcbilid+"&amp;apos; and biltyp = &amp;apos;"+srctyp+"&amp;apos; and acc = &amp;apos;"+acc+"&amp;apos;");
//  throw new Exception(refid);
//	
//   var c = flwstads.getRowCount();
//    for(var i=1;i&amp;lt;c;i++)
//    {
//             
//    }
	bildtl.setValueAt(dtlrowno,"REFID1","1");
	bildtl.setValueAt(dtlrowno,"REFNAM1","默认库位");
  if(refid != "1")
  {
   
	  bilhdr.setValueAt(0,"REFID1",srcid);
	  var typ = flwstads.getStringAt(flwstaidx,"SRCBILTYP");
	  bilhdr.setValueAt(0,"SUBTYP",typ);
	  var LOCID = srchdr.getStringAt(0,"LOCID");
	  bilhdr.setValueAt(0,"LOCID",LOCID);
	  var count = db.GetSQL("select count(*) from bilhdr where biltyp=&amp;apos;SH&amp;apos; AND ACC=&amp;apos;"+acc+"&amp;apos; and substr(bilid,0,instr(bilid,&amp;apos;~&amp;apos;)-1)=&amp;apos;"+srcbilid+"&amp;apos;\n");
	  if(count==0){
	  	bilhdr.setValueAt(0,"BILID",srcbilid+"-1");
	  	for(var r=0;r&amp;lt;srcdtl.getRowCount();r++){
	  		bildtl.setValueAt(r,"BILID",srcbilid+"-1");
	  	}
		eaContext.setBilid(srcbilid+"-1");  	
	  }
	  else {
	  	var maxseq = db.GetSQL(" select max(substr(bilid,instr(bilid,&amp;apos;~&amp;apos;)+1,length(bilid)))+1 from bilhdr where substr(bilid,0,length(&amp;apos;"+srcbilid+"&amp;apos;))=&amp;apos;"+srcbilid+"&amp;apos; and biltyp=&amp;apos;SH&amp;apos; and acc=&amp;apos;"+acc+"&amp;apos;");
	  	bilhdr.setValueAt(0,"BILID",srcbilid+"-"+maxseq);
	  	for(var r=0;r&amp;lt;srcdtl.getRowCount();r++){
	  		bildtl.setValueAt(r,"BILID",srcbilid+"-"+maxseq);
	  	}
	  	eaContext.setBilid(srcbilid+"-"+maxseq);  
	  }
   }else{
   	throw new Exception(refid );
   }
  //end of func</OnConvert>
				<OnDelete name="删除目标单据时发生" comment="可用对象:eaContext,_EADB"></OnDelete>
				<DESC name="数据流描述"></DESC>
				<REFID1 NAME="扩展字段REFID1用途">LOCID</REFID1>
				<REFNAM1 NAME="扩展字段REFNAM1用途">LOCNAM</REFNAM1>
				<REFID2 NAME="扩展字段REFID2用途">CORPID</REFID2>
				<REFNAM2 NAME="扩展字段REFNAM2用途">CORPNAM</REFNAM2>
</ROW>
</ROWSET>
</BilFlw>
	<srcBil name="来源单据信息">
		<ROWSET>
			<ROW name="记录">
				<SRCCLS name="可转换的单据">SO</SRCCLS>
				<ConvertMod name="单据转换模式:0=(默认)明细转换;1=整单转换;2=仅转换单据头">0</ConvertMod>
				<ValFld name="待转换的字段：如果模式＝2，则该字段是单据头字段">qty</ValFld>
				<where name="datflwsta表的过滤条件"></where>
				<OnBeforeGenSta name="开始构造datsta前发生，用于单据预处理。">//
  //可用对象:eaContext,_EADB,bilhdr,bildtl(单据数据集)
  //如果把bilhdr的BILID或bildtl的ITMID清空，则跳过该单据或明细
  var db=eaContext.getEADatabase();
  var flwid=bilhdr.getStringAt(0,"DATFLW");
  var sql = "select FLW from datflw where id=&amp;apos;"+flwid+"&amp;apos;";
  var ds=db.GetXMLSQL(sql);
  if(ds.getRowCount()&amp;gt;0)
  {
  var oldflw = ds.getStringAt(0,0);
  if(oldflw=="SX2SO" || oldflw=="SS2SO"||oldflw=="SXA2SO" ||oldflw=="SXB2SO" )//由SX2SO,SS2SO生成的销售单，不再生成送货单
    bilhdr.setValueAt(0,"BILID","");
  }

  for(var row = 0;row &amp;lt;bildtl.getRowCount();row ++)
  {
  	if(bildtl.getStringAt(row,"QTY") == 0.0)
  	{
  		bildtl.setValueAt(row,"ITMID","");
  	}
  }
  
  return "";
  //end of func</OnBeforeGenSta>
				<OnGenStaMemo name="构造bilfwsta的备注信息时发生" comment="可用对象:sta(0:单据头;1:明细),ds(单据数据集),row(当前行号);返回MEMO1或MEMO2,如果返回空字符,用默认的说明信息">return "";				
			//</OnGenStaMemo>
				<OnUnCkeck name="单据取消审核时发生" comment="可用对象:eaContext,_EADB"></OnUnCkeck>
</ROW>
</ROWSET>
</srcBil>
</dataFlow>
