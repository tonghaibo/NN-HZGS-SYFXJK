<?xml version="1.0" encoding="GBK"?>
<dataFlow name="模板" ID="temp">
	<BilFlw name="生成目标定义">
		<ROWSET>
			<ROW name="记录">
				<DESC name="数据流描述"></DESC>
				<DESTCLS name="待生成的目标单据">PN</DESTCLS>
				<ValFld name="目标单据的字段">MNY</ValFld>
				<Filter name="数据过滤模式。0:(默认)不处理；1:对itemid相同的明细做分组汇总"></Filter>
				<MappedMode name="单据映射关系。0:(默认)多源单据对一目标单据映射；1:一对一映射"></MappedMode>
				<WriteBack name="修改目标单据时，是否回写数据流状态。0:不回写;1(默认):回写"></WriteBack>
				<SrcHdrFlds name="源单据头的转换">SUBTYP,CORPID,CORPNAM,LOCID,LOCNAM,NOTE,REFID1,REFNAM1,REFID2,REFNAM2</SrcHdrFlds>
				<DestHdrFlds name="目标单据的对应转换字段">SUBTYP,CORPID,CORPNAM,LOCID,LOCNAM,NOTE,REFID1,REFNAM1,REFID2,REFNAM2</DestHdrFlds>
				<OnConvertDtl name="datflwsta表中的一行记录转换到目标单据的xmlds中后发生">//
  //可用对象:eaContext,usrinf,srchdr,srcdtl(源单据明细),bilhdr(目标单据的单据头)
  //      bildtl(目标单据的明细),dtlrowno(当前的目标明细行号)
  //      flwstads(用户选择的数据流状态，包含字段：SRCBILTYP, SRCBIL, SRCBILSEQ,VALLEFT,val2Convert, MEMO1,MEMO2,GUID)
  //      flwstaidx(当前状态行)
  //设定目标单据的几个有关金额字段
//		bilhdr.setValueAt(0,"REFID1",srchdr.getStringAt(0,"BILID"));
		
  var sql= "";
  var firstcorp = flwstads.getStringAt(0,"REFID2");
  var nextcorp = "";
  for(var r=1;r&amp;lt;flwstads.getRowCount();r++){
  	nextcorp = flwstads.getStringAt(r,"REFID2");  	
  	if(!firstcorp .equals(nextcorp )){
  		throw new Exception("【生成预付款错误！不同的供应商不能生成一张预付款申请单，请确认！】");
  	}
  }		
				
  //end of func</OnConvertDtl>
				<OnConvert name="所有来源转换到目标单据后，保存到数据库前发生">//
  //可用对象:eaContext,usrinf,srchdr,bilhdr(目标单据的单据头),bildtl(目标单据的明细)
  //      flwstads(用户选择的数据流状态，包含字段：SRCBILTYP, SRCBIL, SRCBILSEQ,VALLEFT,val2Convert, MEMO1,MEMO2,GUID)
	var pubpack = new JavaPackage("com.xlsgrid.net.pub");
	var db = new pubpack.EADatabase();
  	var srcmny = 0;
  	var destmny = 0;
  	var zftax = 0;
  	var summny = 0;  	
	var datflw = 0;	
	var val = 0;
	var sumy = 0;	
	var sql = "";	
//	throw new Exception(bildtl.GetXml());
	for(var r=0 ;r&amp;lt;bildtl.getRowCount();r++){		
		var bilid = bildtl.getStringAt(r,"BILID");
		var biltyp = bildtl.getStringAt(r,"BILTYP");
		var acc = bildtl.getStringAt(r,"ACC");
		var itmid = bildtl.getStringAt(r,"ITMID");
		
		
		
		srcmny =1.0 * bildtl.getStringAt(r,"MNY");		
		summny = summny + srcmny;                                                                
                                                                
                                                                											
		destmny = 1.0 * bildtl.getStringAt(r,"REFNAM2");					
		bildtl.setValueAt(r,"REFID1",destmny);						

		zftax = 1.0 * bildtl.getStringAt(r,"REFID2");

		sql = " select nvl(val,0) val from (select df.srcval-df.valleft val from datflwsta df,bildtl bl where df.srcbil = bl.bilid 		
			and df.srcbiltyp = bl.biltyp and df.acc = bl.acc and df.srcbilseq = bl.seqid
			and bl.bilid = &amp;apos;"+bilid+"&amp;apos; and biltyp=&amp;apos;"+biltyp+"&amp;apos; and bl.acc=&amp;apos;"+acc+"&amp;apos; and bl.itmid = &amp;apos;"+itmid+"&amp;apos; and valleft!=0 )";
		val = db.GetSQL(sql);


		bildtl.setValueAt(r,"REFID2",val);
		bildtl.setValueAt(r,"REFID3",zftax);
	}

	var corpid = bilhdr.getStringAt(0,"CORPID");
		sql =" select nvl(sum(val1-val2),0) val from ( 
		select srcbildat dat,srcbil bilid,srcbiltyp,refid2 corpid,refnam2 CORPnam,memo1 NOTE,srcval val1,0 val2
	from datflwsta 
	where flw=&amp;apos;PNPZ2PZ&amp;apos;
	  and REFID2=&amp;apos;"+corpid+"&amp;apos;
    union all 
	select b.dat,b.destbil bilid,b.destbiltyp,a.refid2 corpid,a.refnam2 CORPnam,&amp;apos;核销&amp;apos;||a.srcbil||&amp;apos; &amp;apos;||a.memo1 NOTE,0 val1,b.destvalue  val2
	from datflwsta a,datflw b
	where b.refguid=a.guid  and a.flw=&amp;apos;PNPZ2PZ&amp;apos;
	   and a.REFID2=&amp;apos;"+corpid+"&amp;apos;
	)   ";
   var valls = db.GetSQL(sql);
   bilhdr.setValueAt(0,"REFID3",1.0 * valls+summny);
	
  //end of func</OnConvert>
				<OnDelete name="删除目标单据时发生">//
  //可用对象:eaContext,_EADB
  
  	
  
  
  //end of func</OnDelete>
				<REFID1 NAME="扩展字段REFID1用途">LOCID</REFID1>
				<REFNAM1 NAME="扩展字段REFNAM1用途">LOCNAM</REFNAM1>
				<REFID2 NAME="扩展字段REFID2用途">CORPID</REFID2>
				<REFNAM2 NAME="扩展字段REFNAM2用途">CORPNAM</REFNAM2>
</ROW>
</ROWSET>
</BilFlw>
	<srcBil name="来源单据信息">
		<ROWSET>
			<ROW name="记录">
				<SRCCLS name="可转换的单据">PC</SRCCLS>
				<ValFld name="待转换的字段：如果模式＝2，则该字段是单据头字段">REFNAM2</ValFld>
				<ConvertTimes name="数据流可转换的次数：0=(默认)不限制;1=转换一次后关闭(设置endflg＝2)"></ConvertTimes>
				<ValueMod name="数据转换模式:0=(默认)不限制;1=限制大于0;2=限制不大于剩余可转数;3=模式1和2的组合"></ValueMod>
				<ConvertMod name="单据转换模式:0=明细转换;1=(默认)整单转换;2=仅转换单据头;3=表头部分勾选"></ConvertMod>
				<where name="datflwsta表的过滤条件"></where>
				<OnBeforeGenSta name="开始构造datsta前发生，用于单据预处理。">//
  //可用对象:eaContext,_EADB,bilhdr,bildtl(单据数据集)
  //如果把bilhdr的BILID或bildtl的ITMID清空，则跳过该单据或明细
  for(var r=0;r&amp;lt;bildtl.getRowCount();r++){
  	if(bildtl.getStringAt(r,"REFID2")==""){
  		bildtl.setValueAt(r,"ITMID","");
  	}
  }
  //end of func</OnBeforeGenSta>
				<OnGenStaMemo name="构造bilfwsta的备注信息时发生">//
  //可用对象:sta(0:单据头;1:明细),ds(单据数据集),row(当前行号);
  //返回MEMO1或MEMO2,如果返回空字符,用默认的说明信息
  //如果把ds的BILID或ITMID清空，则跳过该单据或明细
  //如果要保存额外信息到  datflwsta 中,请当sta=0时设置ds的字段,后台处理时回自动保存到
  //对应的 datflwsta 字段中:
  //  LOCID  --  REFID1      LOCNAM  --  REFNAM1
  //  CORPID --  REFID2      CORPNAM --  REFNAM2
  //  SUBTYP --  SRCSUBTYP
  
  //end of func</OnGenStaMemo>
				<OnUnCkeck name="单据取消审核时发生">//
  //可用对象:eaContext,_EADB(EADatabase)
  
  //end of func</OnUnCkeck>
</ROW>
</ROWSET>
</srcBil>
</dataFlow>
