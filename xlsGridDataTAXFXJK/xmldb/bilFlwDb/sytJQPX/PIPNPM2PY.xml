<?xml version="1.0" encoding="GBK"?>
<dataFlow name="模板" ID="temp">
	<BilFlw name="生成目标定义">
		<ROWSET>
			<ROW name="记录">
				<DESC name="数据流描述"></DESC>
				<DESTCLS name="待生成的目标单据">PY</DESTCLS>
				<ValFld name="目标单据的字段">MNY</ValFld>
				<Filter name="数据过滤模式。0:(默认)不处理；1:对itemid相同的明细做分组汇总"></Filter>
				<MappedMode name="单据映射关系。0:(默认)多源单据对一目标单据映射；1:一对一映射"></MappedMode>
				<WriteBack name="修改目标单据时，是否回写数据流状态。0:不回写;1(默认):回写"></WriteBack>
				<SrcHdrFlds name="源单据头的转换">SUBTYP,CORPID,CORPNAM,LOCID,LOCNAM,NOTE,REFID1,REFNAM1,REFID2,REFNAM2</SrcHdrFlds>
				<DestHdrFlds name="目标单据的对应转换字段">SUBTYP,CORPID,CORPNAM,LOCID,LOCNAM,NOTE,REFID1,REFNAM1,REFID2,REFNAM2</DestHdrFlds>
				<OnConvertDtl name="datflwsta表中的一行记录转换到目标单据的xmlds中后发生">//
  //可用对象:eaContext,usrinf,srchdr,srcdtl(源单据明细),bilhdr(目标单据的单据头)
  //      bildtl(目标单据的明细),dtlrowno(当前的目标明细行号)
  //      flwstads(用户选择的数据流状态，包含字段：SRCBILTYP, SRCBIL, SRCBILSEQ,VALLEFT,val2Convert, MEMO1,MEMO2,GUID)
  //      flwstaidx(当前状态行)
  var pubpack = new JavaPackage ( "com.xlsgrid.net.pub" );
  var db = new pubpack.EADatabase();
  //合计数据流中的金额，公式：PI-PM-PZ;
  var srcbiltyp = "";
  var srcbil = "";
  var subtyp = "";
  var summny = 0.0;
  var PImny = 0.0;//明细中单据类型为PZ(subtyp=&amp;apos;PI&amp;apos;)的金额
  var sumPImny = 0.0;
  var PMmny = 0.0;//明细中单据类型为PM的金额
  var sumPMmny = 0.0;
  var PNmny = 0.0;//明细中单据类型为PZ(subtyp=&amp;apos;PN&amp;apos;)的金额
  var sumPNmny = 0.0;
  var totalmny = 0.0;
  var corp ="";
  var itmid = "";
  var sql = "";
  var acc = srchdr.getStringAt(0,"ACC");  

for(var r=0;r&amp;lt;flwstads.getRowCount();r++){
  	srcbiltyp=flwstads.getStringAt(r,"SRCBILTYP");
  	srcbil = flwstads.getStringAt(r,"SRCBIL");
	if(srcbiltyp.equals("PZ")){
  	  	sql = " select  NVL(subtyp,&amp;apos;NULL&amp;apos;) subtyp from (
  			select subtyp from bilhdr where biltyp=&amp;apos;"+srcbiltyp+"&amp;apos; and bilid=&amp;apos;"+srcbil+"&amp;apos; and acc=&amp;apos;"+acc+"&amp;apos;)";
  		subtyp = db.GetSQL(sql);	
  		if(subtyp.equals("PI") || subtyp.equals("PN")){
			corp = flwstads.getStringAt(r,"REFID2");
			break;
  		}	
  		else if(subtyp.equals("PM")|| subtyp=="NULL"){
  			corp = flwstads.getStringAt(r,"REFID3");
  		}
	}
  }	 
  
  
  for(var r=0;r&amp;lt;flwstads.getRowCount();r++){
  	srcbil = flwstads.getStringAt(r,"SRCBIL");
  	srcbiltyp = flwstads.getStringAt(r,"SRCBILTYP");
  	if(srcbiltyp.equals("PZ")){
  	  	sql = " select  NVL(subtyp,&amp;apos;NULL&amp;apos;) subtyp from (
  			select subtyp from bilhdr where biltyp=&amp;apos;"+srcbiltyp+"&amp;apos; and bilid=&amp;apos;"+srcbil+"&amp;apos; and acc=&amp;apos;"+acc+"&amp;apos;)";
  		subtyp = db.GetSQL(sql);	
  		if(subtyp.equals("PI")){
  			PImny = flwstads.getStringAt(r,"val2Convert");
  			sumPImny = sumPImny + PImny;
  		}
  		else if(subtyp.equals("PN")){
  			PNmny = flwstads.getStringAt(r,"val2Convert");
  			sumPNmny  = sumPNmny  + PNmny ;
  		}
  	}
  	else if(srcbiltyp.equals("PM")){
  		itmid = flwstads.getStringAt(r,"REFID3");
		if(itmid==corp){
	 		PMmny = flwstads.getStringAt(r,"VAL2CONVERT");
	  		sumPMmny = sumPMmny+PMmny;
	  	}  			
  	}
  }
  
  totalmny = sumPImny-sumPMmny-sumPNmny;
  bilhdr.setValueAt(0,"REFID3",totalmny);
  bilhdr.setValueAt(0,"NOTE",""); 
  
   
  //删除目标单据的所有明细(付款单中只有头部数据，没有明细数据)
  var rowCount = flwstads.getRowCount();
  var str="";  
//  for (var i=bildtl.getRowCount()-1;i&amp;gt;=0;i--)
//      bildtl.DeleteRow(i);
	bildtl.clearDS();


  var dtlrow = -1;
  for (var i=0;i&amp;lt;rowCount;i++){
      var bilid = flwstads.getStringAt(i,"SRCBIL");
      var biltyp = flwstads.getStringAt(i,"SRCBILTYP");
      var mny = flwstads.getStringAt(i,"SRCVAL") * 1.0;
      var notaxmny = flwstads.getStringAt(i,"VALLEFT") * 1.0;
      var taxmny = flwstads.getStringAt(i,"VAL2CONVERT") * 1.0;

      var paydat = srchdr.getStringAt(0,"DAT");
      //var note = srchdr.getStringAt(0,"NOTE");
      var itmnam = "";
      
      if(biltyp.equals("PZ")){
      	sql = " select  NVL(subtyp,&amp;apos;NULL&amp;apos;) subtyp from (
  	select subtyp from bilhdr where biltyp=&amp;apos;"+srcbiltyp+"&amp;apos; and bilid=&amp;apos;"+srcbil+"&amp;apos; and acc=&amp;apos;"+acc+"&amp;apos;)";
  	subtyp = db.GetSQL(sql);
  	
  	if(subtyp.equals("PI")){
  		itmnam = "采购发票凭证";
  	}
  	else if(subtyp.equals("PN")){
  		itmnam = "预付款凭证";
	  	taxmny = -1 * taxmny;
  	}
      }
      else if (biltyp == "PM"){
      	  itmnam = "代垫费用";
      	  taxmny = -1 * taxmny;
      }
      dtlrow = bildtl.AddNullRow(-1);
      bildtl.setValueAt(dtlrow,"ITMID",bilid);
      bildtl.setValueAt(dtlrow,"ITMNAM",itmnam);
      bildtl.setValueAt(dtlrow,"MNY",mny);
      bildtl.setValueAt(dtlrow,"NOTAXMNY",notaxmny);
      bildtl.setValueAt(dtlrow,"TAXMNY",taxmny);
      bildtl.setValueAt(dtlrow,"REFID1",paydat);
      bildtl.setValueAt(dtlrow,"REFNAM1","");
  }
  //end of func</OnConvertDtl>
				<OnConvert name="所有来源转换到目标单据后，保存到数据库前发生">//
  //可用对象:eaContext,usrinf,srchdr,bilhdr(目标单据的单据头),bildtl(目标单据的明细)
  //      flwstads(用户选择的数据流状态，包含字段：SRCBILTYP, SRCBIL, SRCBILSEQ,VALLEFT,val2Convert, MEMO1,MEMO2,GUID)
  
  //end of func</OnConvert>
				<OnDelete name="删除目标单据时发生">//
  //可用对象:eaContext,_EADB
  
  //end of func</OnDelete>
				<REFID1 NAME="扩展字段REFID1用途">LOCID</REFID1>
				<REFNAM1 NAME="扩展字段REFNAM1用途">LOCNAM</REFNAM1>
				<REFID2 NAME="扩展字段REFID2用途">CORPID</REFID2>
				<REFNAM2 NAME="扩展字段REFNAM2用途">CORPNAM</REFNAM2>
</ROW>
</ROWSET>
</BilFlw>
	<srcBil name="来源单据信息">
		<ROWSET>
			<ROW name="记录">
				<SRCCLS name="可转换的单据">PZ</SRCCLS>
				<ValFld name="待转换的字段：如果模式＝2，则该字段是单据头字段">MNY</ValFld>
				<ConvertTimes name="数据流可转换的次数：0=(默认)不限制;1=转换一次后关闭(设置endflg＝2)"></ConvertTimes>
				<ValueMod name="数据转换模式:0=(默认)不限制;1=限制大于0;2=限制不大于剩余可转数;3=模式1和2的组合"></ValueMod>
				<ConvertMod name="单据转换模式:0=明细转换;1=(默认)整单转换;2=仅转换单据头;3=表头部分勾选"></ConvertMod>
				<where name="datflwsta表的过滤条件"></where>
				<OnBeforeGenSta name="开始构造datsta前发生，用于单据预处理。">//
  //可用对象:eaContext,_EADB,bilhdr,bildtl(单据数据集)
  //如果把bilhdr的BILID或bildtl的ITMID清空，则跳过该单据或明细
  for( var r=0 ;r&amp;lt;bildtl.getRowCount();r++){
  	var itmid = bildtl.getStringAt(r,"ITMID");
  	if(itmid.substring(0,4)!="2202"){
  		bildtl.setValueAt(r,"ITMID","");
  	}
  }
  //end of func</OnBeforeGenSta>
				<OnGenStaMemo name="构造bilfwsta的备注信息时发生">//
  //可用对象:sta(0:单据头;1:明细),ds(单据数据集),row(当前行号);
  //返回MEMO1或MEMO2,如果返回空字符,用默认的说明信息
  //如果把ds的BILID或ITMID清空，则跳过该单据或明细
  //如果要保存额外信息到  datflwsta 中,请当sta=0时设置ds的字段,后台处理时回自动保存到
  //对应的 datflwsta 字段中:
  //  LOCID  --  REFID1      LOCNAM  --  REFNAM1
  //  CORPID --  REFID2      CORPNAM --  REFNAM2
  //  SUBTYP --  SRCSUBTYP
  
  //end of func</OnGenStaMemo>
				<OnUnCkeck name="单据取消审核时发生">//
  //可用对象:eaContext,_EADB(EADatabase)
  
  //end of func</OnUnCkeck>
</ROW>
</ROWSET>
</srcBil>
</dataFlow>

