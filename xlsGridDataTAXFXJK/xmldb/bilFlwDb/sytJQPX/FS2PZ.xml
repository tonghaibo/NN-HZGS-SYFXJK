<?xml version="1.0" encoding="GBK"?>
<dataFlow name="模板" ID="temp">
	<BilFlw name="生成目标定义">
		<ROWSET>
			<ROW name="记录">
				<DESC name="数据流描述"></DESC>
				<DESTCLS name="待生成的目标单据">PZ</DESTCLS>
				<ValFld name="目标单据的字段">TAXMNY</ValFld>
				<Filter name="数据过滤模式。0:(默认)不处理；1:对itemid相同的明细做分组汇总"></Filter>
				<MappedMode name="单据映射关系。0:(默认)多源单据对一目标单据映射；1:一对一映射"></MappedMode>
				<WriteBack name="修改目标单据时，是否回写数据流状态。0:不回写;1(默认):回写"></WriteBack>
				<SrcHdrFlds name="源单据头的转换">SUBTYP,CORPID,CORPNAM,LOCID,LOCNAM,NOTE,REFID1,REFNAM1,REFID2,REFNAM2</SrcHdrFlds>
				<DestHdrFlds name="目标单据的对应转换字段">SUBTYP,CORPID,CORPNAM,LOCID,LOCNAM,NOTE,REFID1,REFNAM1,REFID2,REFNAM2</DestHdrFlds>
				<OnConvertDtl name="datflwsta表中的一行记录转换到目标单据的xmlds中后发生">//
  //可用对象:eaContext,usrinf,srchdr,srcdtl(源单据明细),bilhdr(目标单据的单据头)
  //      bildtl(目标单据的明细),dtlrowno(当前的目标明细行号)
  //      flwstads(用户选择的数据流状态，包含字段：SRCBILTYP, SRCBIL, SRCBILSEQ,VALLEFT,val2Convert, MEMO1,MEMO2,GUID)
  //      flwstaidx(当前状态行)
  
  //end of func</OnConvertDtl>
				<OnConvert name="所有来源转换到目标单据后，保存到数据库前发生">//
  //可用对象:eaContext,usrinf,srchdr,bilhdr(目标单据的单据头),bildtl(目标单据的明细)
  //      flwstads(用户选择的数据流状态，包含字段：SRCBILTYP, SRCBIL, SRCBILSEQ,VALLEFT,val2Convert, MEMO1,MEMO2,GUID)
  //throw new Exception(客户编号);
  var pub=new JavaPackage("com.xlsgrid.net.pub");
  var sortds = bildtl.sort("REFID2");//按结算号排序
  bildtl.clearDS();
  bildtl.Append(sortds);

  var c = bildtl.getRowCount()-1; 
  var 总金额 = 0.0;
  var 原结算号="";
  var 原科目编号="";
  var 原销售发票号="";
  var 分组合计借方金额=0;
  var 分组合计贷方金额=0;
  var 本次分组记录数=1;
  
  // 如果结算号REFID2是相同的，并且科目编号也是相同的，合并在一起 摘要的客户信息也去掉
  // gld 06-12-27,但是要先按结算号和科目编号进行一次排序，否则无法合并
  var sMsg = "";
  var fsbilids = "";
  for(var i=c;i&amp;gt;=0;i--)
  {
    var tmp = pub.EAFunc.formatDouble(1.0*bildtl.getStringAt(i,"TAXMNY"),2);
    bildtl.setValueAt(i,"TAXMNY",tmp); //gld 06-6-27 严格保证精度
    总金额 += 1.0 * tmp;
    var 结算单号=bildtl.getStringAt(i,"BILID");
    var 结算号=bildtl.getStringAt(i,"REFID2");
    var 销售发票号 = bildtl.getStringAt(i,"REFID1");
    var 结算号信息 ="";
    var 科目编号=bildtl.getStringAt(i,"ITMID");
    var 帐套号  =bildtl.getStringAt(i,"ACC");
    fsbilids += "&amp;apos;" + 结算单号 + "&amp;apos;,";

    // 得到客户信息和业务员信息
    var noteds = pub.EADbTool.QuerySQL("SELECT CORPNAM,REFNAM2 FROM BILHDR where acc=&amp;apos;"+帐套号+"&amp;apos; and bilid=&amp;apos;"+结算单号+"&amp;apos; and biltyp=&amp;apos;FS&amp;apos;");
    var 客户名称 = "";
    var 业务员 = "";
    if (noteds.getRowCount()&amp;gt;0) {
            客户名称 = noteds.getStringAt( 0,"CORPNAM" );
            业务员   = noteds.getStringAt( 0,"REFNAM2" );
    } 
    if ( 结算号!="") 结算号信息 = "结算号:" + 结算号;
    
    // 填写摘要信息--20060824 根据云南财务田经理提出的需求修改 梁
    var 摘要 = bildtl.getStringAt(0,"REFNAM2");    
    bildtl.setValueAt(i,"REFNAM1",摘要 + " 销售发票号[" + 销售发票号 + "] " + 结算号信息 + " " +客户名称 + " " + 业务员);
   // end 20060824
    
    sMsg += "|"+原科目编号+","+科目编号+","+原结算号+","+结算号+","+销售发票号+"|";
    if ( !(原科目编号==科目编号 &amp;&amp; 原结算号==结算号 &amp;&amp; 原销售发票号==销售发票号) ) {
          sMsg += "原科目编号!=科目编号 &amp;&amp; 原结算号!=结算号 i=" +i;
          if( 原结算号!="" ) {
                bildtl.setValueAt(i+1,"TAXMNY",""+分组合计借方金额);
                bildtl.setValueAt(i+1,"MNY",""+分组合计贷方金额);
          }
          分组合计借方金额 = 1.0 * pub.EAFunc.formatDouble(1.0*bildtl.getStringAt(i,"TAXMNY"),2);
          分组合计贷方金额 = 1.0 * pub.EAFunc.formatDouble(1.0*bildtl.getStringAt(i,"MNY"),2);
          本次分组记录数 =1;
    }
    else {      
          sMsg += " NOT 原科目编号!=科目编号 &amp;&amp; 原结算号!=结算号 i=" +i;
          分组合计借方金额+= 1.0 * pub.EAFunc.formatDouble(1.0*bildtl.getStringAt(i,"TAXMNY"),2);  
          分组合计贷方金额+= 1.0 * pub.EAFunc.formatDouble(1.0*bildtl.getStringAt(i,"MNY"),2); 
          sMsg +="累计增加" + 分组合计借方金额;

          本次分组记录数 ++; 
          if(原结算号!="") {
                bildtl.DeleteRow(i);  
       	        c --;
          }
    } 
    // 最后一次处理
    if( i==0 &amp;&amp; 原结算号!="" &amp;&amp; 本次分组记录数&amp;gt;1) {
          bildtl.setValueAt(0,"TAXMNY",""+分组合计借方金额);
          bildtl.setValueAt(0,"MNY",""+分组合计贷方金额);
    }
    原科目编号=科目编号;
    原结算号=结算号;
    原销售发票号=销售发票号;
  }
  //得到结算单列表
  fsbilids = fsbilids.substring(0, fsbilids.length() - 1);
  
  //throw new pub.EAException( sMsg );
  //附件数默认为1
  bilhdr.setValueAt(0,"REFID1","1");
  
  var 业务员编号 = "";//srchdr.getStringAt(0,"UID");
  var 客户编号 = srchdr.getStringAt(0,"CORPID");
  bilhdr.setValueAt(0,"REFID2",业务员编号);
  bilhdr.setValueAt(0,"REFNAM2",客户编号);
  bilhdr.setValueAt(0,"SUBTYP",srchdr.getStringAt(0,"BILTYP"));

  //贷方：销售收入（不含税）SY，应缴税金SJ,区分税率
  var 收入 = 1.0 * pub.EAFunc.formatDouble(总金额/1.17,2);
  var 税额 = pub.EAFunc.formatDouble(总金额-收入,2);
  var sql = "select nvl(d.id,'未定义科目') 科目编号,
		nvl(d.name,'未定义科目') 科目名称,
		c.note 摘要,
		sum(a.notaxmny) 金额
	from bildtl a,item b,accitmbind c,accitm d
	where a.itmid=b.id and &amp;apos;SY_&amp;apos;||b.potax*100=c.id(+) and c.accitmid=d.id(+)
	and a.biltyp=&amp;apos;SI&amp;apos; and a.bilid in (
	select srcbil from datflw where flw=&amp;apos;SI2FS&amp;apos; and destbil in (%s)
	) and a.stat=&amp;apos;2&amp;apos; and a.acc=&amp;apos;JQPX&amp;apos;
	group by b.potax,d.id,d.name,c.note
	union all
	select nvl(d.id,'未定义科目') 科目编号,
		nvl(d.name,'未定义科目') 科目名称,
		c.note 摘要,
		sum(a.taxmny) 金额
	from bildtl a,item b,accitmbind c,accitm d
	where a.itmid=b.id and &amp;apos;SJ_&amp;apos;||b.potax*100=c.id(+) and c.accitmid=d.id(+)
	and a.biltyp=&amp;apos;SI&amp;apos; and a.bilid in (
	select srcbil from datflw where flw=&amp;apos;SI2FS&amp;apos; and destbil in (%s)
	) and a.stat=&amp;apos;2&amp;apos; and a.acc=&amp;apos;JQPX&amp;apos;
	group by b.potax,d.id,d.name,c.note".format([fsbilids,fsbilids]);
  var dfDs = pub.EADbTool.QuerySQL(sql);
  var currow = 0;
//  throw new Exception(sql);
  for(var i=0;i&amp;lt;dfDs.getRowCount();i++){
    currow = bildtl.AddNullRow(i - 1);
    bildtl.setValueAt(currow, "ITMID", dfDs.getStringAt(i,"科目编号"));
    bildtl.setValueAt(currow, "ITMNAM", dfDs.getStringAt(i,"科目名称"));
    bildtl.setValueAt(currow, "REFNAM1", dfDs.getStringAt(i,"摘要"));
    bildtl.setValueAt(currow, "TAXMNY", 0);
    bildtl.setValueAt(currow, "MNY", dfDs.getStringAt(i,"金额"));
  }

  c = bildtl.getRowCount()-1;
  var oldsrcbil = "";
  var bilno = 0;
  var bacc  = "JQPX";	//bildtl.getStringAt(0,"ACC");
  var srcbiltyp = "FS";	//bildtl.getStringAt(0,"BILTYP");
  for(var i=c;i&amp;gt;=0;i--)
  {
    //if(bacc== "TS") throw new Exception(bildtl.GetXml());
    var srcbilid = bildtl.getStringAt(i,"BILID");
    
    if(oldsrcbil != srcbilid )
    {
      oldsrcbil = srcbilid;
      bilno ++;      
      var sql = "select CORPID from bilhdr where biltyp=&amp;apos;"+srcbiltyp+"&amp;apos; and acc=&amp;apos;"+
            bacc +"&amp;apos; and bilid=&amp;apos;"+srcbilid+"&amp;apos;";
      //throw new Exception(sql);
//      客户编号 = pub.EADbTool.GetSQL(sql);
    }

//    bildtl.setValueAt(i,"REFID2",业务员编号);
//    bildtl.setValueAt(i,"REFNAM2",客户编号);
  }  
  //end of func</OnConvert>
				<OnDelete name="删除目标单据时发生">//
  //可用对象:eaContext,_EADB
  
  //end of func</OnDelete>
				<REFID1 NAME="扩展字段REFID1用途">LOCID</REFID1>
				<REFNAM1 NAME="扩展字段REFNAM1用途">LOCNAM</REFNAM1>
				<REFID2 NAME="扩展字段REFID2用途">CORPID</REFID2>
				<REFNAM2 NAME="扩展字段REFNAM2用途">CORPNAM</REFNAM2>
</ROW>
</ROWSET>
</BilFlw>
	<srcBil name="来源单据信息">
		<ROWSET>
			<ROW name="记录">
				<SRCCLS name="可转换的单据">FS</SRCCLS>
				<ValFld name="待转换的字段：如果模式＝2，则该字段是单据头字段">TAXMNY</ValFld>
				<ConvertTimes name="数据流可转换的次数：0=(默认)不限制;1=转换一次后关闭(设置endflg＝2)"></ConvertTimes>
				<ValueMod name="数据转换模式:0=(默认)不限制;1=限制大于0;2=限制不大于剩余可转数;3=模式1和2的组合"></ValueMod>
				<ConvertMod name="单据转换模式:0=明细转换;1=(默认)整单转换;2=仅转换单据头;3=表头部分勾选"></ConvertMod>
				<where name="datflwsta表的过滤条件"></where>
				<OnBeforeGenSta name="开始构造datsta前发生，用于单据预处理。">//
  //可用对象:eaContext,_EADB,bilhdr,bildtl(单据数据集)
  //如果把bilhdr的BILID或bildtl的ITMID清空，则跳过该单据或明细
  
  //end of func</OnBeforeGenSta>
				<OnGenStaMemo name="构造bilfwsta的备注信息时发生">//
  //可用对象:sta(0:单据头;1:明细),ds(单据数据集),row(当前行号);
  //返回MEMO1或MEMO2,如果返回空字符,用默认的说明信息
  //如果把ds的BILID或ITMID清空，则跳过该单据或明细
  //如果要保存额外信息到  datflwsta 中,请当sta=0时设置ds的字段,后台处理时回自动保存到
  //对应的 datflwsta 字段中:
  //  LOCID  --  REFID1      LOCNAM  --  REFNAM1
  //  CORPID --  REFID2      CORPNAM --  REFNAM2
  //  SUBTYP --  SRCSUBTYP
  if(sta==1)
  {
    var 借方 = 1.0 * ds.getStringAt(row,"TAXMNY");
    if(借方==0) //借方=0,skip
      ds.setValueAt(row,"ITMID","");
      
    return "科目："+ds.getStringAt(row,"ITMID")+" "+ds.getStringAt(row,"ITMNAM")+" 发生额："+ds.getStringAt(row,"TAXMNY")+" 结算号："+ds.getStringAt(row,"REFID2");
  }
  else
  {
    return "原发票号："+ds.getStringAt(0,"REFID1")+"客户："+ds.getStringAt(0,"CORPNAM")+" 备注："+ds.getStringAt(0,"NOTE");
  }  
  //end of func</OnGenStaMemo>
				<OnUnCkeck name="单据取消审核时发生">//
  //可用对象:eaContext,_EADB(EADatabase)
  
  //end of func</OnUnCkeck>
</ROW>
</ROWSET>
</srcBil>
</dataFlow>
