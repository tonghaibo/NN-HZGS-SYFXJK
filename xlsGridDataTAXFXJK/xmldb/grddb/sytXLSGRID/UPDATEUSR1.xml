<?xml version='1.0' encoding='GBK'?><mdroot><grdds>
<ROWSET>
<ROW num="0" ><MWTYP >M</MWTYP><MWID >UPDATEUSR1</MWID><NAME >操作员资料维护1</NAME><NOTE ></NOTE><NOACCNAME ></NOACCNAME><FILE >UPDATEUSR1.zxg</FILE><SCENE ></SCENE><FIXED ></FIXED><CATTYP ></CATTYP><DTLRNG ></DTLRNG><BATINP ></BATINP><MANUNIT ></MANUNIT><USESMLUNT ></USESMLUNT><ITEMTABLE ></ITEMTABLE><BILHDRTABLE ></BILHDRTABLE><BILDTLTABLE ></BILDTLTABLE><COLLIST ></COLLIST><WHERE ></WHERE><ORDER ></ORDER><DBNAME ></DBNAME><LISTSUM ></LISTSUM><LOADDATA ></LOADDATA><CHECKTITLE ></CHECKTITLE><IFBILL ></IFBILL><EXTJS >xlsgrid/js/dbhelper.js</EXTJS><JAVACLS ></JAVACLS><POST2MWID ></POST2MWID><LMS ></LMS><syt >XLSGRID</syt></ROW>
</ROWSET>
</grdds><grdjsds>
<ROWSET>
<ROW num="0" ><GRDJSDS_VALUE >//================================================================// 
// 函数：thisOnpost_loaddata
// 说明：调用dbhelper的初始化动作
// 参数：
// 返回：
// 样例：
// 作者：
// 创建日期：11/17/05 17:31:52
// 修改日志：
//================================================================// 
order = &amp;quot; order by id&amp;quot;;
function _thisOnpost_loaddata(sheet)
{

//       setButton();
//       // 构造3个 SQL
//       // 查询用户数据表记录
//       selectSQL = &amp;quot;SELECT GUID,ID as 用户编号,NAME as 用户名称,ORG as 组织,MOBILE as 手机号码, &amp;quot;+
//                   &amp;quot;DEFLOC 所在仓库,&amp;quot;+      //LOC as 所属部门, 
//                   &amp;quot;MAINURL as \&amp;quot;登录后的首页\&amp;quot;,POST as \&amp;quot;岗位描述\&amp;quot;,USEFLG as \&amp;quot;是否使用标志\&amp;quot; &amp;quot;+
//                   //&amp;quot;,CRTUSR as 创建人,CRTDAT as 创建时间
//                   &amp;quot;from USR  &amp;quot;;
//       //新增用户数据表记录
//       insertSQL = &amp;quot;INSERT INTO USR ( GUID,ID,NAME,ORG,MOBILE,DEFLOC,MAINURL,POST,USEFLG &amp;quot;+      //LOC,
//                   //,CRTUSR,CRTDAT 
//                   &amp;quot; ) values( sys_guid(),?,?,?,?,?,?,?,? )&amp;quot;;
//       // 修改用户数据表记录
//       updateSQL = &amp;quot;UPDATE USR SET ID=?,NAME=?,ORG=?,MOBILE=?, &amp;quot;+
//                   &amp;quot;DEFLOC=?,MAINURL=?,POST=?,USEFLG=? &amp;quot;+
//                   //,CRTUSR=?,CRTDAT=?
//                   &amp;quot;where guid=?&amp;quot;;
//       //删除用户数据表记录
//       deleteSQL = &amp;quot;delete USR where guid=? &amp;quot;;
//            
//       _dbhelper.SetSelectSQL( selectSQL );
//       _dbhelper.SetInsertSQL( insertSQL );
//       _dbhelper.SetUpdateSQL( updateSQL );
//       _dbhelper.SetDeleteSQL( deleteSQL );
//       
//       // 载入数据并放在相应的位置
//       _dbhelper.Load(1,1,2,2);









	// 第一步，定义对应数据库的字段
	// 字段属性： ID,显示列标题,默认值,正则表达式,是否列入查询的字段(=1是)
	var  fields = &amp;quot;GUID,GUID,sys_guid();&amp;quot;+	
			&amp;quot;ID,用户编号,,.+,1;&amp;quot;+ 
			&amp;quot;LOC,默认的仓库号,,.+,0;&amp;quot;+ 
			&amp;quot;NAME,用户名称,,.+,1;&amp;quot;+ 
			&amp;quot;ORG,组织,,.+,1;&amp;quot;+ 
			&amp;quot;PASSWD,密码,,.+,1;&amp;quot;+ 
			&amp;quot;MAINURL,登录后首页,,.+,0;&amp;quot;+ 

		        &amp;quot;STRDAT,起效日期,,.+,0;&amp;quot;+ 
//			&amp;quot;MAINURL,登录后的首页,,.+,0;&amp;quot;+ 
			&amp;quot;POST,岗位描述,,.+,0;&amp;quot;+ 
//			&amp;quot;OLDID,老数据库编号,,,1;&amp;quot;+
			&amp;quot;CRTUSR,创建人,,.+,0;&amp;quot;+ 
			&amp;quot;CRTDAT,创建时间,,.+,0;&amp;quot;+ 
			&amp;quot;MOBILE,手机号码,,.+,0;&amp;quot;+ 	 
			&amp;quot;DEPTID,合同额度,.+,0;&amp;quot; +
//			&amp;quot;DEPT,所属部门,.+,0;&amp;quot; +
//			&amp;quot;IFYW,是否业务员,,.+,0;&amp;quot;+
			&amp;quot;USEFLG,使用标志,,.+,0&amp;quot;;  
			&amp;quot;DEFLOC,默认仓库号,,.+,0&amp;quot;;   //DEFLOC 默认仓库号~供中间件设置默认值  
	var where = &amp;quot; ORG  like &amp;apos;XLSGRID%&amp;apos;&amp;quot; ;
//        var where = &amp;quot;1 &amp;gt; 0 order by ID&amp;quot;;
//	var orderby = &amp;quot;&amp;quot;;      
      var orderby = &amp;quot;&amp;quot;;
	// 字段的列表
	// 参数1：基表的名称
	// 参数2：字段列表 格式是通过;分隔不同的字段，每个分隔中使用,来分隔不同的字段属性
	// 参数3：主键
	// 参数4：显示空行标志 =true表示如果结果集为空，隐藏开头的两个空行,强制用户点击“新增”，以保证填入默认值
	// 参数5：查询的表名称，在某些情况下，查询的表名称和基表名称不一样，默认=&amp;quot;&amp;quot;表示查询表名称采用基表名称
	// 参数6：where条件，是不带where的子句如&amp;quot;ID like &amp;apos;01%&amp;apos;&amp;quot;
	// 参数7：orederby，是不带order by的子句如&amp;quot;ID,REFID&amp;quot;, 
	_dbhelper.InitSQL(&amp;quot;USR&amp;quot;,fields,&amp;quot;GUID&amp;quot;,false,&amp;quot;USR&amp;quot;,where,orderby);
	_dbhelper.InitColumnList(fields );
	_dbhelper.Load(1,1,2,2);                     

	// 需要调用该函数，否则按钮不会出来
	setButton();
}

function initpage(){
}

function f_dbeditbeforesave(){

}
//================================================================// 
// 函数：f_dbeditpostloaddata
// 说明：载入每一个页后，做页面的初始化工作
// 参数：
// 返回：
// 样例：
// 作者：
// 创建日期：11/29/05 11:57:45
// 修改日志：
//================================================================// 
function f_dbeditpostloaddata(){
//      _this.SetColVisible(sheet,3,-1);
        // 自定义的特殊处理
       // 如：
       //       1、设置列的邦定属性
       //       2、设置默认值
       //       3、设置可修改或隐藏属性
       //alert(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_LOC&amp;quot;));
//       var listid0 =_this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_LOC&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);
//       var listid1 =_this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_USRCLASS&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);
//      // var listid2 =_this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_USEFLG&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);
//       for(row=_this.GetMainCellRangeRow1(sheet);row&amp;lt;=_this.GetMainCellRangeRow2(sheet);row++)
//       {
//            _this.SetToComboBox(&amp;quot;&amp;quot;, sheet,row,7,listid0);
//            _this.SetToComboBox(&amp;quot;&amp;quot;, sheet,row,8,listid1);
//            _this.SetToComboBox(&amp;quot;&amp;quot;, sheet,row,10,listid2);
//            
//            
//       }
                 
       for(row=_this.GetMainCellRangeRow1(sheet);row&amp;lt;=_this.GetMainCellRangeRow2(sheet);row++)
       {
//            _this.SetToComboBox(&amp;quot;&amp;quot;, sheet,row,7,listid0);
//            _this.SetToComboBox(&amp;quot;&amp;quot;, sheet,row,8,listid1);
//            _this.SetToComboBox(&amp;quot;&amp;quot;, sheet,row,10,listid2);
            _this.SetToBoolBox(sheet,row,15);//设置单元格为勾选,值为1或0
            
            
       }
}
//================================================================// 
// 函数：f_dbeditafternewrow
// 说明：自动生成生成编号
// 参数：
// 返回：
// 样例：
// 作者：
// 创建日期：05/27/06 14:06:17
// 修改日志：
//================================================================// 
var nCntNoCommit = 0;      // 没有保存的新增的编号数，用于定位
function f_dbeditafternewrow(sheet,row)
{
      try {
//            var refid = _this.GetCellText(sheet,row-1,8 );
//            var ret = invokeOSFunc(&amp;quot;GetMaxid&amp;quot;,&amp;quot;refid=&amp;quot;+refid) ;        
//            ret = nCntNoCommit + 1.0*ret;
//            _this.SetCellText(sheet,row,4,ret );
//            alert ( G_ORGID );
             _this.SetCellText(sheet,row,5,G_ORGID );
              _this.SetCellText(sheet,row,10,1);


//            nCntNoCommit ++;
       }
      catch ( e ) {
            alert ( e );
      }
}

//================================================================// 
// 函数：f_dbeditbeforesave
// 说明：保存时，把nCntNoCommit =0
// 参数：
// 返回：
// 样例：
// 作者：
// 创建日期：05/27/06 14:15:22
// 修改日志：
//================================================================// 
function f_dbeditbeforesave(){
      nCntNoCommit =0;
}</GRDJSDS_VALUE></ROW>
</ROWSET>
</grdjsds><grdosds>
<ROWSET>
<ROW num="0" ><GRDOSDS_VALUE >
var pubpack= new JavaPackage(&amp;quot;com.xlsgrid.net.pub&amp;quot;);

function addHeaderHtml(mwobj,request,sb,usrinfo)
//var sb = new java.lang.StringBuffer();var usrinfo = new web.EAUserinfo();
{
  
  sb.append(&amp;quot;&amp;lt;script&amp;gt;\n&amp;quot;);
  var thisorgid=pubpack.EAFunc.NVL(request.getParameter(&amp;quot;thisorgid&amp;quot;),&amp;quot;&amp;quot;);
  sb.append(&amp;quot;\nvar thisorgid=\&amp;quot;&amp;quot;+thisorgid+&amp;quot;\&amp;quot;;&amp;quot;);
  sb.append(&amp;quot;&amp;lt;/script&amp;gt;&amp;quot;);
}</GRDOSDS_VALUE></ROW>
</ROWSET>
</grdosds><fldhdr>
<ROWSET>
<ROW num="0" ><BILID >1单据编号</BILID><STAT >0单据状态</STAT><SUBTYP >0子类型</SUBTYP><CORPID >0往来单位编号</CORPID><CORPNAM >0往来单位名称</CORPNAM><LOCID >0仓库|部门编号</LOCID><LOCNAM >0仓库|部门名称</LOCNAM><DAT >0单据日期</DAT><CRTUSR >1录入人</CRTUSR><CRTUSRNAM >0录入人姓名</CRTUSRNAM><CRTDAT >0录入日期</CRTDAT><CHKUSR >1审核人</CHKUSR><CHKUSRNAM >0审核人姓名</CHKUSRNAM><CHKDAT >0审核日期</CHKDAT><SUMQTY >0合计金额</SUMQTY><SUMMNY >0合计金额</SUMMNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5><REFID6 >0扩展字段</REFID6><REFNAM6 >0扩展字段</REFNAM6><NOTE >0备注</NOTE></ROW>
</ROWSET>
</fldhdr><flddtl>
<ROWSET>
<ROW num="0" ><SEQID >1明细序号</SEQID><ITMID >1品种编号</ITMID><ITMNAM >0品种名称</ITMNAM><ITEMPC >0品种批次号</ITEMPC><ITMSPC >0规格</ITMSPC><UNIT >0计量单位</UNIT><SMLUNT >0小计量单位</SMLUNT><UNTNUM >0大单位转小单位因子</UNTNUM><PRICE >0价格</PRICE><QTY >0数量</QTY><TAXTYP >0税率类型</TAXTYP><NOTAXMNY >0不含税税额</NOTAXMNY><TAXMNY >0税额</TAXMNY><MNY >0下单金额</MNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5></ROW>
</ROWSET>
</flddtl></mdroot>