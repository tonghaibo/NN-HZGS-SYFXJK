<?xml version='1.0' encoding='GBK'?><mdroot><grdds>
<ROWSET>
<ROW num="0" ><MWTYP >M</MWTYP><MWID >ReportFile</MWID><NAME >行业分析表</NAME><NOTE ></NOTE><FILE >ReportFile.zxg</FILE><FIXED ></FIXED><CATTYP ></CATTYP><DTLRNG ></DTLRNG><EXTJS >xlsgrid/js/public.js,xlsgrid/js/x/JSFUNC.djs</EXTJS><JAVACLS ></JAVACLS><syt >TAXMON</syt></ROW>
</ROWSET>
</grdds><grdbtnds>
<ROWSET>
<ROW num="0" ><ID >savetrk</ID><NAME >保存</NAME><TIP ></TIP><BTNORD ></BTNORD><IMG >0</IMG><IMGMOUSE >0</IMGMOUSE><C7 >savetrk</C7><C8 ></C8><C9 ></C9><C10 ></C10><C11 >savetrk</C11><C12 ></C12><C13 >savetrk</C13><C14 >savetrk</C14></ROW>
</ROWSET>
</grdbtnds><grdjsds>
<ROWSET>
<ROW num="0" ><GRDJSDS_VALUE >var sheet = 0; 
var sheetText = 1;  //事务正文SHEET 
var interval=250; //时间间隔
var spacelen=120;//字符运行的长度
var space10=&amp;quot; &amp;quot;;
var HDRGUID = &amp;quot;&amp;quot;;

// 函数：thisOnpost_loaddata 
// 说明： 设置值
function _thisOnpost_loaddata(sheet)
{
	sheetText =_this.AddSheet(&amp;quot;事务正文&amp;quot;);
	_this.SplitSheet(0,&amp;quot;V&amp;quot;,&amp;quot;160&amp;quot;);
        _this.SetToCodeEditor(&amp;quot;&amp;quot;,sheetText ,-1,-1,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;); //单元格设置为编辑框
               
        _this.SetCellBkColor(0,-1,-1,255,255,255);
        _this.LoadScene(sheet,10);
        var yymmList = _this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_YYYY_MM&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);
        _this.SetToComboBox(&amp;quot;&amp;quot;,sheet,2,2,yymmList);
        _this.SetToFileSelectBox(&amp;quot;&amp;quot;,0,6,2);
        
        try {
        	HDRGUID = guid;
        }
        catch(e) {}
        
        if (HDRGUID != &amp;quot;&amp;quot;) {
        	_sql.querytods(&amp;quot;detail&amp;quot;,&amp;quot;guid=&amp;quot;+HDRGUID);
        	_this.SetCellText(sheet,2,2,_this.XMLDS_GetString(0,&amp;quot;YYMM&amp;quot;));
        	_this.SetCellText(sheet,4,2,_this.XMLDS_GetString(0,&amp;quot;TITLE&amp;quot;));
        	_this.SetCellText(sheet,6,2,_this.XMLDS_GetString(0,&amp;quot;FILENOTE&amp;quot;));
        	_this.SetCellText(sheetText,-1,-1,_this.XMLDS_GetString(0,&amp;quot;NOTE&amp;quot;));
        }
	
}


//================================================================// 
// 函数：save
// 说明：保存事务
// 参数：
// 返回：
// 样例：
// 作者：
// 创建日期：11/13/06 13:36:50
// 修改日志：
//================================================================// 
function savetrk()   
{
         var file = _this.GetCellText(sheet,6,2);             //获取文件名    
         var path1 = &amp;quot;&amp;quot;;//server端附件路径
         var filename = &amp;quot;&amp;quot;;                  
         var aftername = &amp;quot;&amp;quot;;
         var sign = true; //判断附件是否上传成功
         var yymm = _this.GetCellText(sheet,2,2);           
         if (yymm == &amp;quot;&amp;quot;) {
         	alert(&amp;quot;请输入所属年月！&amp;quot;);
         	return;
         }
         
         //事务附件
         if( file != &amp;quot;&amp;quot; || file.length != 0 ) 
         {
                path1 = invokeOSFunc(&amp;quot;file&amp;quot;,&amp;quot;&amp;quot;) ;         //服务端文件路径
                filename = getFilename();                     //此处要先取文件名，防止两次http请求冲突  
                _this.OpenHttpRequest(&amp;quot;uploadFile.sp&amp;quot;,&amp;quot;UPLOAD&amp;quot;);  //打开上传页面                                           
                //aftername = &amp;quot;.&amp;quot;+getBySplit(file,&amp;quot;.&amp;quot;,1);           //文件后缀名
                aftername = file.substring(file.indexOf(&amp;quot;.&amp;quot;,-1));           //文件后缀名
                
                var temp_file = _this.ZipFile(file,&amp;quot;&amp;quot;);           //把上传压缩文件放在一个临时目录                
                _this.AddHttpRequestParam(&amp;quot;uploadfile&amp;quot;,temp_file,1);   //上传选定文件          
                _this.AddHttpRequestParam(&amp;quot;path&amp;quot;,path1,0);         //设定服务端的绝对保存路径，如 \tmp\,注意，路径后必须有符号 \   
                _this.AddHttpRequestParam(&amp;quot;filename&amp;quot;,filename+aftername,0);   //设定服务端的保存文件名
                var xml = _this.SendHttpRequest();                //开始上传   
                _this.CloseHttpRequest();  
                var p = &amp;quot;&amp;quot;;
                if( xml == &amp;quot;&amp;quot; )  
                { 
                      alert(&amp;quot;操作错误,可能是网络连接错误.&amp;quot;); 
                      sign = false;
                } 
                else 
                {
                      _this.XMLDS_Parse(xml);   //解析XML字符串
                      p = _this.XMLDS_GetString(1,&amp;quot;code&amp;quot;) ;
                      if ( p == &amp;quot;1&amp;quot; )
                      {
                           xml = &amp;quot;保存成功&amp;quot;; 
                           sign = true;
                      }    
                      else
                      {
                            xml = &amp;quot;上传附件失败&amp;quot;;
                            sign = false; 
                            alert (&amp;quot;可能是网络连接错误，&amp;quot;+xml);                           
                      } 
                }
          }

          //保存
          if ( sign )
          {
                   var ret = 0;   
                   var count = 0;        
                   var yymm = _this.GetCellText(sheet,2,2);  
                   var title = _this.GetCellText(sheet,4,2);  
                   var note = _this.GetCellShowText(sheetText,-1,-1);  ///可能不符
                   var filenote = _this.GetCellText(sheet,6,2);
                   var filepath = path1+filename+aftername;  
                   var param = new Object();  
                   if (HDRGUID == &amp;quot;&amp;quot;) {
                   	param.edit = &amp;quot;save&amp;quot;;
                   }  
                   else {
                   	param.edit = &amp;quot;modify&amp;quot;;
                   }
                   param.yymm = yymm;                           
                   param.title = title;                           
                   param.note = note;
                    param.crtusr = G_USRID; 
                    param.filepath = filepath;			//附件地址
                    param.filenote = filenote;			//附件
                    param.selforg = G_ORGID;			//全局变量
                    param.syt = G_SYTID;			//全局变量
                    param.acc = G_ACCID;			//全局变量
                    param.hdrguid = HDRGUID;			//事务打开事务的guid
                    try 
                    {     
			ret = invokeOSFuncExt(&amp;quot;save1&amp;quot;,param) ; 
                        alert ( &amp;quot;已录入&amp;quot;+ret+&amp;quot;条事务&amp;quot;); 
                        return true ;   
                    }
                    catch(e)
                    {
                           alert (e);
                    }
             }                                   
 }

//================================================================// 
// 函数：getFilename
// 说明：得到上传文件的服务端文件名，设置文件前缀
function getFilename() 
{ 
      QuerySQLDS(&amp;quot;select to_char(sysdate,&amp;apos;yymmddhh24miss&amp;apos;) dat from dual&amp;quot;);  
      var count = _this.XMLDS_GetRowCount(); 
      var date = &amp;quot;&amp;quot;;      
      if ( count &amp;gt; 0 )  
      { 
            date = _this.XMLDS_GetString(0,&amp;quot;dat&amp;quot;); 
      } 
      return  G_USRID+&amp;quot;_&amp;quot;+date; 
}
</GRDJSDS_VALUE></ROW>
</ROWSET>
</grdjsds><grdosds>
<ROWSET>
<ROW num="0" ><GRDOSDS_VALUE >var pubpack = new JavaPackage ( &amp;quot;com.xlsgrid.net.pub&amp;quot; );//加载类包 
var grdpack = new JavaPackage ( &amp;quot;com.xlsgrid.net.grd&amp;quot; ); 

// 新增事务的保存
function save1() 
{
      var ret = 0;
      var db = null;
      var ds = null;
      var sql = &amp;quot;&amp;quot;;
      var ps1 = null;

      try
      {
            db = new pubpack.EADatabase();
            if ( edit == &amp;quot;save&amp;quot; )
            {
            	sql = &amp;quot;SELECT SYS_GUID() FROM DUAL&amp;quot; ;
            	var hdrguid = db.GetSQL(sql);
            
                  sql = &amp;quot;insert into tax_filedata(guid,org,title,note,crtusr,filepath,filenote,yymm,noteblob)  values ( ?,?,?,?,?,?,?,?,empty_blob())&amp;quot;; 
                  ps1 = db.prepareStatement(sql);
                  
                  ps1.setString(1,hdrguid);//数据库查询的结果
                  ps1.setString(2,selforg);//数据库查询的结果
                  ps1.setString(3,title);
                  ps1.setString(4,note);
                  ps1.setString(5,crtusr);
                  ps1.setString(6,filepath);
                  ps1.setString(7,filenote); 
		  ps1.setString(8,yymm); 
		  
		  ret = ps1.executeUpdate(); 
                  ps1.close();

//                  sql = &amp;quot;select noteblob from tax_filedata where guid=&amp;apos;&amp;quot;+hdrguid+&amp;quot;&amp;apos; for update&amp;quot;;
//                   var blob = db.GetSQL(sql);
//                  db.UpdateBlobWithStr(sql,&amp;quot;noteblob&amp;quot;,note);
                  
                  db.Commit();

            }
            if ( edit == &amp;quot;modify&amp;quot; )
            {
                  sql = &amp;quot;update tax_filedata set title=?,note=?,crtusr=?,filepath=?,filenote=?,yymm=? where guid=?&amp;quot;;
                  ps1 = db.prepareStatement(sql);
                  ps1.setString(1,title);
                  ps1.setString(2,note);
                  ps1.setString(3,crtusr);
                  ps1.setString(4,filepath);
                  ps1.setString(5,filenote);
                  ps1.setString(6,yymm);
                  ps1.setString(7,hdrguid);

                  ret = ps1.executeUpdate();
                  ps1.close();

                  db.Commit();
            }
            
           return ret ;
	}catch(e){
		if( db!= null ) db.Rollback();
		throw e;
	}
	finally{
		db.Close(); 
	}       
}

function file()
{
     // return  &amp;quot;/&amp;quot;+pubpack.EAOption.get(&amp;quot;xlsgrid.file.dynadata.root&amp;quot;)+&amp;quot;upload/&amp;quot;;  
      return  &amp;quot;/&amp;quot;+pubpack.EAOption.get(&amp;quot;filestore&amp;quot;)+&amp;quot;upload/&amp;quot;;  
}


function getBlob(){
	var db = null;
	var sql = &amp;quot;&amp;quot;;
	try {
		db = new pubpack.EADatabase();
		sql = &amp;quot;select noteblob from trkhdr where id=&amp;apos;&amp;quot;+id+&amp;quot;&amp;apos;&amp;quot;;
		var blob = db.getBlob2String(sql,&amp;quot;noteblob&amp;quot;);
		return blob;
	}
	catch ( ee ) {
		db.Rollback();
		throw new pubpack.EAException ( sql+ee.toString() );
	}
	finally {
		if (db!=null) db.Close();
	}
}
    
  


</GRDOSDS_VALUE></ROW>
</ROWSET>
</grdosds><grddscds>
<ROWSET>
<ROW num="0" ><ID >detail</ID><NAME ></NAME><DATDSC >select guid,title,note,filenote,yymm from tax_filedata where guid=&amp;apos;[%guid]&amp;apos;</DATDSC><C4 >queryformtrk</C4><C5 >queryformtrk</C5><C6 >queryformtrk</C6><C7 >queryformtrk</C7><C8 >queryformtrk</C8><C9 >detail</C9></ROW>
</ROWSET>
</grddscds><fldhdr>
<ROWSET>
<ROW num="0" ><BILID >1单据编号</BILID><SUBTYP >0子类型</SUBTYP><CORPID >0往来单位编号</CORPID><CORPNAM >0往来单位名称</CORPNAM><LOCID >0仓库|部门编号</LOCID><LOCNAM >0仓库|部门名称</LOCNAM><DAT >0单据日期</DAT><CRTUSR >1录入人</CRTUSR><CRTUSRNAM >0录入人姓名</CRTUSRNAM><CRTDAT >0录入日期</CRTDAT><CHKUSR >1审核人</CHKUSR><CHKUSRNAM >0审核人姓名</CHKUSRNAM><CHKDAT >0审核日期</CHKDAT><REFID1 >0参考编号1</REFID1><REFNAM1 >0参考名称1</REFNAM1><REFID2 >0参考编号2</REFID2><REFNAM2 >0参考名称2</REFNAM2><NOTE >0备注信息</NOTE></ROW>
</ROWSET>
</fldhdr><flddtl>
<ROWSET>
<ROW num="0" ><SEQID >1明细序号</SEQID><ITMID >1品种编号</ITMID><ITMNAM >0品种名称</ITMNAM><ITEMPC >0品种批次号</ITEMPC><ITMSPC >0规格</ITMSPC><UNIT >0计量单位</UNIT><SMLUNT >0小计量单位</SMLUNT><UNTNUM >0大单位转小单位因子</UNTNUM><PRICE >0价格</PRICE><QTY >0数量</QTY><TAXTYP >0税率类型</TAXTYP><NOTAXMNY >0不含税税额</NOTAXMNY><TAXMNY >0税额</TAXMNY><MNY >0下单金额</MNY><REFID1 >0参考编号1</REFID1><REFNAM1 >0参考名称1</REFNAM1><REFID2 >0参考编号2</REFID2><REFNAM2 >0参考名称2</REFNAM2></ROW>
</ROWSET>
</flddtl></mdroot>