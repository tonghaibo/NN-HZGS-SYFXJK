<?xml version='1.0' encoding='GBK'?><mdroot><grdds>
<ROWSET>
<ROW num="0" ><MWTYP >M</MWTYP><MWID >qrcode</MWID><NAME >二维码处理</NAME><NOTE ></NOTE><NOACCNAME ></NOACCNAME><FILE >qrcode.zxg</FILE><SCENE ></SCENE><FIXED ></FIXED><CATTYP ></CATTYP><DTLRNG ></DTLRNG><BATINP ></BATINP><MANUNIT ></MANUNIT><USESMLUNT ></USESMLUNT><ITEMTABLE ></ITEMTABLE><BILHDRTABLE ></BILHDRTABLE><BILDTLTABLE ></BILDTLTABLE><COLLIST ></COLLIST><WHERE ></WHERE><ORDER ></ORDER><DBNAME ></DBNAME><LISTSUM ></LISTSUM><LOADDATA ></LOADDATA><CHECKTITLE ></CHECKTITLE><IFBILL ></IFBILL><EXTJS ></EXTJS><JAVACLS ></JAVACLS><POST2MWID ></POST2MWID><LMS ></LMS><WIDTHMOD >1</WIDTHMOD><HEIGHTMOD ></HEIGHTMOD><CLIENTCLASS ></CLIENTCLASS><SHOWBTN ></SHOWBTN><CLOSEPAGES ></CLOSEPAGES></ROW>
</ROWSET>
</grdds><grdjsds>
<ROWSET>
<ROW num="0" ><GRDJSDS_VALUE >
//点击按钮
function _thisOnButtonCtrlClick(id,sheet,row,col)
{
	if(id==&amp;quot;生成&amp;quot;){
		var data = _this.GetCellText(0,8,2);
		var imgformat = _this.GetCellText(0,5,3);
		var codesize = _this.GetCellText(0,3,3);
		
		if(data==&amp;quot;&amp;quot; ) {
			alert ( &amp;quot;请输入需要生成二维码的文字信息&amp;quot; );
			return;
			
		}
		else {
			var url = &amp;quot;EAQrcode.sp?codesize=&amp;quot;+codesize +&amp;quot;&amp;imgformat=&amp;quot;+imgformat +&amp;quot;&amp;data=&amp;quot;+data ;
			//alert ( url );
			//window.open(url);
			var imgid = _this.LoadImage(url);
			_this.SetToImage(&amp;quot;&amp;quot;,0,8,6,imgid );
		}
	
	}
}


//数据加载完毕
function _thisOnpost_loaddata(sheet)
{
	var listid1 = _this.CreateListValue();
	_this.SetListValue(listid1, &amp;quot;png&amp;quot;,&amp;quot;png格式&amp;quot;);
	_this.SetListValue(listid1, &amp;quot;jpg&amp;quot;,&amp;quot;jpg格式&amp;quot;);
	_this.SetListValue(listid1, &amp;quot;gif&amp;quot;,&amp;quot;gif格式&amp;quot;);
	_this.SetToComboBox(&amp;quot;&amp;quot;, 0, 5,3,listid1 );

	var listid2 = _this.CreateListValue();
	_this.SetListValue(listid2, &amp;quot;small&amp;quot;,&amp;quot;小图片 84个字节限制&amp;quot;);
	_this.SetListValue(listid2, &amp;quot;big&amp;quot;,&amp;quot;大图片 500个字节限制&amp;quot;);
	_this.SetToComboBox(&amp;quot;&amp;quot; ,0, 3,3,listid2 );
}
</GRDJSDS_VALUE></ROW>
</ROWSET>
</grdjsds><grdosds>
<ROWSET>
<ROW num="0" ><GRDOSDS_VALUE >var pubpack = new JavaPackage ( &amp;quot;com.xlsgrid.net.pub&amp;quot; );
var baskpack = new JavaPackage ( &amp;quot;com.xlsgrid.net&amp;quot; );
var awtpack = new JavaPackage ( &amp;quot;java.awt&amp;quot; );
var awtimagepack = new JavaPackage ( &amp;quot;java.awt.image&amp;quot; );
var iopack = new JavaPackage ( &amp;quot;java.io&amp;quot; );
var imageiopack = new JavaPackage ( &amp;quot;javax.imageio&amp;quot; );
var swetakepack = new JavaPackage(&amp;quot;com.swetake.util&amp;quot;);

/*

此服务端代码已经移植到JAVA端，调用方式：
	EAQrcode.sp
	
*/

//作为.sp服务时的入口
//预定义变量：request,response
function Response()
{
	
      var codesize=pubpack.EAFunc.NVL( request.getParameter(&amp;quot;codesize&amp;quot;),&amp;quot;small&amp;quot;) ;//codesize=small(default)或big
      var srcValue=&amp;quot;&amp;quot;+pubpack.EAFunc.NVL( request.getParameter(&amp;quot;data&amp;quot;),&amp;quot;&amp;quot;) ;//data 是二维码的内容
      var action=pubpack.EAFunc.NVL( request.getParameter(&amp;quot;action&amp;quot;),&amp;quot;decode&amp;quot;) ;//action=decode,encode
      var imgformat=pubpack.EAFunc.NVL( request.getParameter(&amp;quot;imgformat&amp;quot;),&amp;quot;jpg&amp;quot;) ;//


      var max_data_size_small = 84;  
      var max_data_size_large = 500;  
      
      var ret= &amp;quot;ok&amp;quot;;
      try {
      	if(action == &amp;quot;decode&amp;quot; ){	//生成图片
      		//var d = srcValue.getBytes();
      		var dataLength = srcValue.length();//d.length;  
      		var imageWidth = 269;
      		var MAX_DATA_LENGTH = max_data_size_large;
      		if(codesize==&amp;quot;small&amp;quot;) {
      			imageWidth = 113;
      			MAX_DATA_LENGTH = max_data_size_small;

      		}
      		var imageHeight = imageWidth ;
      		var bi = new awtimagepack.BufferedImage(imageWidth, imageHeight, awtimagepack.BufferedImage.TYPE_INT_RGB);  
        	var g = bi.createGraphics();  
        	g.setBackground(awtpack.Color.WHITE);  
        	g.clearRect(0, 0, imageWidth, imageHeight);  
        	g.setColor(awtpack.Color.BLACK);  
      		if (dataLength &amp;gt; 0 &amp;&amp; dataLength &amp;lt;= MAX_DATA_LENGTH) {    
      		    var qrcode = new swetakepack.Qrcode();  
	            qrcode.setQrcodeErrorCorrect(&amp;quot;M&amp;quot;); // L, Q, H, 默认  
	            qrcode.setQrcodeEncodeMode(&amp;quot;B&amp;quot;); // A, N, 默认  
	            if(codesize==&amp;quot;small&amp;quot;)
	                 qrcode.setQrcodeVersion(5); // 37字节, (37-1)*3+2+3-1+1 = 113  
	            else qrcode.setQrcodeVersion(18);// 0&amp;lt;= version &amp;lt;=40; 89字节,    (89-1)*3+2+3-1+1 = 269

	            var b = qrcode.calQrcode(srcValue.getBytes());//  
	            var qrcodeDataLen = b.length;  
	            for (var i = 0; i &amp;lt; qrcodeDataLen; i++) {  
	                for (var j = 0; j &amp;lt; qrcodeDataLen; j++) {  
	                    if (b[j][i]) {  
	                        g.fillRect(j * 3 + 2, i * 3 + 2, 3, 3);  
	                    }  
	                }  
	            }  
      		}
      		else {
      			if(dataLength &amp;lt;=0  ) return &amp;quot;data is null&amp;quot;; 
      			else return &amp;quot;datalength is too big,max size is &amp;quot;+MAX_DATA_LENGTH;  
      		}
      		g.dispose();  
        	bi.flush();  
        	try {  
	            imageiopack.ImageIO.write(bi, imgformat, response.getOutputStream() ); //&amp;quot;png&amp;quot;  
	        } catch (IOException ioe) {  
	            return &amp;quot;Generate QRCode image error!&amp;quot; + ioe.getMessage();  

	        } 
      	}
      		      
        
            
            
            
      }
      catch ( ee ) {
            //db.Rollback();
            throw new pubpack.EAException ( ee.toString() );
      }
      finally {
            //if (db!=null) db.Close();
      }
      return ret ;
}</GRDOSDS_VALUE></ROW>
</ROWSET>
</grdosds><fldhdr>
<ROWSET>
<ROW num="0" ><BILID >1单据编号</BILID><STAT >0单据状态</STAT><SUBTYP >0子类型</SUBTYP><CORPID >0往来单位编号</CORPID><CORPNAM >0往来单位名称</CORPNAM><LOCID >0仓库|部门编号</LOCID><LOCNAM >0仓库|部门名称</LOCNAM><DAT >0单据日期</DAT><CRTUSR >1录入人</CRTUSR><CRTUSRNAM >0录入人姓名</CRTUSRNAM><CRTDAT >0录入日期</CRTDAT><CHKUSR >1审核人</CHKUSR><CHKUSRNAM >0审核人姓名</CHKUSRNAM><CHKDAT >0审核日期</CHKDAT><SUMQTY >0合计金额</SUMQTY><SUMMNY >0合计金额</SUMMNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5><REFID6 >0扩展字段</REFID6><REFNAM6 >0扩展字段</REFNAM6><NOTE >0备注</NOTE></ROW>
</ROWSET>
</fldhdr><flddtl>
<ROWSET>
<ROW num="0" ><SEQID >1明细序号</SEQID><ITMID >1品种编号</ITMID><ITMNAM >0品种名称</ITMNAM><ITEMPC >0品种批次号</ITEMPC><ITMSPC >0规格</ITMSPC><UNIT >0计量单位</UNIT><SMLUNT >0小计量单位</SMLUNT><UNTNUM >0大单位转小单位因子</UNTNUM><PRICE >0价格</PRICE><QTY >0数量</QTY><TAXTYP >0税率类型</TAXTYP><NOTAXMNY >0不含税税额</NOTAXMNY><TAXMNY >0税额</TAXMNY><MNY >0下单金额</MNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5></ROW>
</ROWSET>
</flddtl></mdroot>