<?xml version='1.0' encoding='GBK'?><mdroot><grdds>
<ROWSET>
<ROW num="0" ><MWTYP>M</MWTYP><MWID>SQLINPUT</MWID><NAME>SQL查询输入</NAME><NOTE></NOTE><FILE>SQLINPUT.zxg</FILE><FIXED></FIXED><CATTYP>02</CATTYP><DTLRNG></DTLRNG><JAVACLS></JAVACLS><syt>x</syt></ROW>
</ROWSET>
</grdds><grdjsds>
<ROWSET>
<ROW num="0" ><GRDJSDS_VALUE>var nSeq = 0 ;
var sheetTree = 0 ;
var sheetSQL = 1;
var sheetResult = 2;
var SQLID = &amp;quot;SQLINTPUT&amp;quot;
var SQLRunning = &amp;quot;&amp;quot;;      // 正在运行的SQL
var page = 1;
var nrow= 20;
var rowcount = 0;

//================================================================// 
// 函数：_thisOnpost_loaddata
// 说明：载入数据
// 参数：
// 返回：
// 样例：
// 作者：
// 创建日期：12/10/05 23:45:15
// 修改日志：
//================================================================// 
function _thisOnpost_loaddata(sheet)
{
       window.onunload=pageunload;
       document.title= &amp;quot;SQL数据库工具&amp;quot;; 
        _this.SetToolbarString(&amp;quot;当前数据源: &amp;quot;+G_DSNAME);
       _this.ShowTabBar(1);
       _this.SetSheetName(0,&amp;quot;数据库对象&amp;quot;);

       if ( treexml == null ) 
             alert ( &amp;quot;无法载入表对象&amp;quot; );
       else
         _this.SetToTreeCtrl(&amp;quot;Tree_1&amp;quot;,sheetTree ,-1,-1,treexml);

       sheetSQL  = _this.AddSheet(&amp;quot;SQL查询&amp;quot;);
       _this.SetToCodeEditor(SQLID,sheetSQL,-1,-1 ,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;);
       sheetResult = _this.AddSheet(&amp;quot;查询结果&amp;quot;);

       _this.SetCellBkColor(sheetResult,-1,-1,255,255,255);//211,219,250

       _this.SetCurrentSheet(sheetResult);
       _this.SplitSheet(sheetTree,&amp;quot;H&amp;quot;,&amp;quot;25%&amp;quot;);
       _this.SplitSheet(sheetSQL,&amp;quot;V&amp;quot;,&amp;quot;30%&amp;quot;);
       
       //_this.AddToolbarButton(&amp;quot;com_begintrans&amp;quot;,&amp;quot;启动事务&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,0,1,1,90);
       
       _this.AddToolbarButton(&amp;quot;com_execute&amp;quot;,&amp;quot;F7执行单个SQL&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,0,0,0,105);
       _this.AddToolbarButton(&amp;quot;com_executeall&amp;quot;,&amp;quot;F8执行多个SQL&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,0,0,0,105);
      
       _this.AddToolbarButton(&amp;quot;com_pre&amp;quot;,&amp;quot;上一页&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,0,0,0,60);
       _this.AddToolbarButton(&amp;quot;com_next&amp;quot;,&amp;quot;下一页&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,0,1,1,60);
       _this.AddToolbarButton(&amp;quot;com_setnpage&amp;quot;,&amp;quot;页行数&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,0,0,0,60);
       //_this.AddToolbarButton(&amp;quot;com_closealldb&amp;quot;,&amp;quot;退出&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,0,1,1,50);
       _this.AddToolbarButton(&amp;quot;com_commit&amp;quot;,&amp;quot;提交&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,0,1,1,50);
       _this.AddToolbarButton(&amp;quot;com_rollback&amp;quot;,&amp;quot;回滚&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,0,1,1,50);
       
       //_this.SetSheetMargin(sheetSQL,10,5,10,5);
       //_this.SetSheetMargin(sheetTree,5,5,5,5);

       try {       
             _this.SetText(SQLID,sql);
       }
       catch ( e ) {//alert(&amp;quot;sql参数不存在&amp;quot; );
       }

       _this.SetCellLock(sheetTree,-1,-1, 1);
}

function pageunload()
{
  invokeOSFunc(&amp;quot;closealldb&amp;quot;,&amp;quot;dsid=&amp;quot; + G_DSID+&amp;quot;&amp;sqlid=&amp;quot;+G_SQLID);
}
/*
function closealldb()
{
  alert(invokeOSFunc(&amp;quot;closealldb&amp;quot;,&amp;quot;dsid=&amp;quot; + G_DSID+&amp;quot;&amp;sqlid=&amp;quot;+G_SQLID));
}
*/
function _thisOnF8KeyDown(sheet,row,col)
{
  executeall();
}

function _thisOnF7KeyDown(sheet,row,col)
{
  execute();
}

// 执行查询
function doexecute(typ)
{
  var sql = &amp;quot;&amp;quot;;
  try{
    sql = _this.CTRL_GetSelectedText(SQLID);
  }catch ( e ) {}
  if ( sql == &amp;quot;&amp;quot; )
    sql = _this.GetCellText( sheetSQL ,-1,-1);

  var sqltitle = sql.trim().substring(0,6).toUpperCase() ;
  if ( sqltitle == &amp;quot;SELECT&amp;quot;  ) 
  {
    // 第一次求所有的记录
    SQLRunning = sql;
    var param = new Object();
    param.runsql = &amp;quot;SELECT COUNT(*) FROM (&amp;quot;+SQLRunning +&amp;quot;) t&amp;quot; ;
    param.sqlid=G_SQLID;
    param.dsid=G_DSID;
    var ret = invokeOSFuncExt(&amp;quot;GetSQL&amp;quot;,param );
    rowcount  = parseInt( ret );       
    page = 1;
    Load(SQLRunning,page,nrow,sheetResult,1,0,3,2)  
  }
  else 
  {
    //if ( confirm( &amp;quot;执行SQL，该操作不可回退，是否继续？&amp;quot; ) == 1 )
    {
      var param = new Object();
      param.typ = &amp;quot;SQL&amp;quot;;
      param.runsql = sql;
      param.buttontype = typ;
      param.sqlid=G_SQLID;
      param.dsid=G_DSID;
      ret = invokeOSFuncExt(&amp;quot;Run&amp;quot;,param ) ;       
      alert (  ret + &amp;quot;\n\n请尽快执行 “提交” 或 “回滚”操作，以免阻塞别人的操作。\n&amp;quot;);
    }
  }
}

function execute()
{
  doexecute(&amp;quot;&amp;quot;);
}


function executeall()
{
  doexecute(&amp;quot;bat&amp;quot;);
}

function commit()
{
  alert(invokeOSFunc(&amp;quot;commit&amp;quot;,&amp;quot;dsid=&amp;quot; + G_DSID+&amp;quot;&amp;sqlid=&amp;quot;+G_SQLID));
}

function rollback()
{
  alert(invokeOSFunc(&amp;quot;rollback&amp;quot;,&amp;quot;dsid=&amp;quot; + G_DSID+&amp;quot;&amp;sqlid=&amp;quot;+G_SQLID));
}

function pre()
{
  if(page&amp;lt;=0)
  {
    alert(&amp;quot;已到首页。&amp;quot;);
    return;
  }
  page --;
  _this.SetRowCount(0,4);
  Load( SQLRunning , page,nrow, sheetResult,1,0,3,2 );
}

function next()
{
  if( page*nrow&amp;gt;rowcount)
  {
    alert(&amp;quot;已到末页。&amp;quot;);
    return;
  }
  page ++;
  _this.SetRowCount(0,4);
  Load( SQLRunning , page,nrow, sheetResult,1,0,3,2 );
}

function setnpage()
{
<<<<<<< SQLINPUT.xml
        if ( id==&amp;quot;com_execute&amp;quot; || id==&amp;quot;com_executeall&amp;quot;) {      
              // 执行查询
              var sql = &amp;quot;&amp;quot;;
              try{
                    sql = _this.CTRL_GetSelectedText(SQLID);
              }catch ( e ) {}
              if ( sql == &amp;quot;&amp;quot; )
                    sql = _this.GetCellText( sheetSQL ,-1,-1);
         //alert ( sql);     
              var sqltitle = Trim(sql).substring(0,6).toUpperCase() ;
              if ( sqltitle == &amp;quot;SELECT&amp;quot;  ) {
                   //window.open(&amp;quot;xlsweb?action=ShowXlsGrid&amp;grdid=SQLOUTPUT&amp;grdtyp=M&amp;isfilldata=true&amp;page=1&amp;nrow=20&amp;sql=&amp;quot;+ sql);
                   // 第一次求所有的记录
                   SQLRunning = sql;
                   var param = new Object();
                   
                   param.runsql = &amp;quot;SELECT COUNT(*) FROM (&amp;quot;+SQLRunning +&amp;quot;) t&amp;quot; ;
                   try {
                        var ret = invokeOSFuncExt(&amp;quot;GetSQL&amp;quot;,param );
                        pagecnt  = parseInt( ret );       
                   }
                   catch ( e ) {
                        alert ( e );
                        return;
                   }
                   
                   page = 1;
                   Load(SQLRunning,page,nrow,sheetResult,1,0,3,2)  
              }
              else {
                    if ( confirm( &amp;quot;执行SQL，该操作不可回退，是否继续？&amp;quot; ) == 1 ){
                          var param = new Object();
                          param.typ = &amp;quot;SQL&amp;quot;;
                          param.runsql = sql;
                          param.buttontype = id;

                          try {
                                    ret = invokeOSFuncExt(&amp;quot;Run&amp;quot;,param ) ;       
                                    alert ( ret );
                              }
                              catch ( e ) {
                                    alert ( e );
                              }
                              
                              
                    }
              }
        }
        else if ( id==&amp;quot;com_new&amp;quot; ) {
              nSeq ++;
              var newsheet = _this.AddSheet(&amp;quot;SQL查询&amp;quot; + nSeq);
             _this.SetToCodeEditor(&amp;quot;code&amp;quot;+nSeq,newsheet,-1,-1 ,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;);
             _this.SetCurrentSheet(newsheet);
        }
        else if ( id==&amp;quot;com_select&amp;quot; ) {
             window.open(&amp;quot;xlsweb?action=ShowXlsGrid&amp;grdid=TABLELIST&amp;quot;);
        }
        else if ( id==&amp;quot;com_setnpage&amp;quot; ) {
              var str=&amp;quot;&amp;quot;+ nrow;
              str=prompt(&amp;quot;请输入每页显示的纪录数:&amp;quot;,str);
              if ( str!=&amp;quot;&amp;quot; ) 
                    nrow=str;
                    
        }
        if ( id==&amp;quot;com_pre&amp;quot; &amp;&amp; page &amp;gt; 1 ) {      
            page --;
            _this.SetRowCount(0,4);
            Load( SQLRunning , page,nrow, sheetResult,1,0,3,2 );
        }  
        else if ( id==&amp;quot;com_next&amp;quot; &amp;&amp; page*nrow&amp;lt;pagecnt ) {      
            page ++;
            _this.SetRowCount(0,4);
            Load( SQLRunning , page,nrow, sheetResult,1,0,3,2 );
        }          
=======
  var str=prompt(&amp;quot;请输入每页显示的纪录数:&amp;quot;,nrow);
  if ( str!=&amp;quot;&amp;quot; ) 
    nrow=str;
>>>>>>> 1.9
}

//================================================================// 
// 函数：Load
// 说明：在指定的位置载入SQL查询结果
// 参数：
// 返回：
// 样例：
// 作者：
// 创建日期：12/01/05 23:03:00
// 修改日志：
//================================================================// 
function Load(sql,page,nrow,sheet,row1,col1,row2,col2)
{
      _this.SetRowCount(sheet,0);
      _this.SetColCount(sheet,0);
      _this.SetRowCount(sheet,4);
      _this.SetColCount(sheet,4);
<<<<<<< SQLINPUT.xml
      /*
      newsql = &amp;quot;SELECT * FROM (&amp;quot;+
            &amp;quot;SELECT ROWNUM AS NUM ,BASETABLE.*  FROM ( &amp;quot;+
             sql+&amp;quot;) BASETABLE&amp;quot;+
             &amp;quot; WHERE ROWNUM &amp;lt;= &amp;quot;+page+&amp;quot;*&amp;quot;+nrow + &amp;quot;)&amp;quot; + 
             &amp;quot; WHERE NUM &amp;gt; (&amp;quot;+page+&amp;quot;-1)*&amp;quot;+nrow;
             */
=======

>>>>>>> 1.9
      var param = new Object();
<<<<<<< SQLINPUT.xml
      param.runsql = sql ;
      param.pageno=page;
      param.pagesize=nrow;
=======
      param.runsql = sql ;
      param.pageno=page;
      param.pagesize=nrow;
      param.sqlid=G_SQLID;
      param.dsid=G_DSID;
>>>>>>> 1.9
      try {
            ret = invokeOSFuncExt(&amp;quot;QuerySQL&amp;quot;,param ) ;       
            _this.SetXmlDS(sheet,row1,col1,row2,col2,ret);
      }
      catch ( e ) {
            alert ( e );
      }

      _this.LoadScene(sheet,4);

}

function _thisOnTreeItemDClick(id, hItem, tagid, attribe, value)
{
      var collist = &amp;quot;&amp;quot;;
      var action = getXmlAttribute(attribe,&amp;quot;action&amp;quot;);
      var conn  = getXmlAttribute(attribe,&amp;quot;conn&amp;quot;);
  if(conn!=null) G_DSID=conn;
     _this.SetToolbarString(&amp;quot;当前数据源: &amp;quot;+G_DSID);
      var level = _this.XMLCTL_GetLevel(id,hItem);
       if ( level == 3 ) {
            xml = invokeOSFunc(&amp;quot;GetTableTree&amp;quot;,&amp;quot;tagid=&amp;quot; + tagid+&amp;quot;&amp;dsid=&amp;quot; + G_DSID+&amp;quot;&amp;sqlid=&amp;quot;+G_SQLID) ;
            _this.XMLCTL_Append(id,xml,hItem,2);
      }
      else if ( action==&amp;quot;VIEWCODE&amp;quot; ) {
            var code = &amp;quot;&amp;quot;;
            try {
                  code = invokeOSFunc(&amp;quot;GetViewCode&amp;quot;,&amp;quot;tablename=&amp;quot;+tagid+&amp;quot;&amp;dsid=&amp;quot; + G_DSID+&amp;quot;&amp;sqlid=&amp;quot;+G_SQLID) ;       
            }
            catch ( e ) {
                  alert ( e );
            }
            
            if ( code.length&amp;gt;0 &amp;&amp; confirm(&amp;quot;该表（视图）的代码如下：是否添加？\n&amp;quot;+code ) == 1 ) {
                  _this.SetText(SQLID,&amp;quot;&amp;quot;);
                  _this.SetText(SQLID,&amp;quot;CREATE OR REPLACE VIEW &amp;quot;+tagid+ &amp;quot; AS \n&amp;quot;+ code );
                  _this.Redraw();
            }
      }
      else {
            try {
                  collist = invokeOSFunc(&amp;quot;GetColumnList&amp;quot;,&amp;quot;tablename=&amp;quot;+tagid+&amp;quot;&amp;dsid=&amp;quot; + G_DSID+&amp;quot;&amp;sqlid=&amp;quot;+G_SQLID) ;       
            }
            catch ( e ) {
                  alert ( e );
            }
            var mysql = &amp;quot;SELECT &amp;quot;+collist+&amp;quot; \nFROM &amp;quot;+tagid;
            if ( confirm(&amp;quot;该表（视图）的查询SQL如下：是否添加？\n&amp;quot;+mysql) == 1 ) {
                  _this.SetText(SQLID,&amp;quot;&amp;quot;);
                  _this.SetText(SQLID,mysql);
                  _this.Redraw();
            }
      }
}

//================================================================// 
// 函数：getXmlAttribute
// 说明：返回XML节点字符串的某个属性值
// 参数：attribe 参数字符串，如 ID=&amp;quot;101&amp;quot; NAME=&amp;quot;scott&amp;quot;  
//       attribename 参数名称 如 ID
// 返回：如 101
// 样例：
// 作者：
// 创建日期：03/11/06 21:18:02
// 修改日志：
//================================================================// 
function getXmlAttribute(attribe,attribename)
{
            var loc = attribe.indexOf( attribename+&amp;quot;=\&amp;quot;&amp;quot; );
            if(loc&amp;lt;0) return null;
            var loc1 = attribe.indexOf( &amp;quot;\&amp;quot;&amp;quot; , loc+attribename.length+2);
            var ret = attribe.substring( loc+attribename.length+2,loc1 ) ;
            return ret;
}
//点击树状控件项目
function _thisOnTreeItemClick(id, hItem, tagid, attribe, value)
{
  var conn  = getXmlAttribute(attribe,&amp;quot;conn&amp;quot;);
  if(conn!=null) G_DSID=conn;
  _this.SetToolbarString(&amp;quot;当前数据源: &amp;quot;+G_DSID);
}

function _thisOnTreeFolderClick(id,hItem,itemid,attribe,value)
{
  var conn  = getXmlAttribute(attribe,&amp;quot;conn&amp;quot;);
  if(conn!=null) G_DSID=conn;
  _this.SetToolbarString(&amp;quot;当前数据源: &amp;quot;+G_DSID);
}
</GRDJSDS_VALUE></ROW>
</ROWSET>
</grdjsds><grdosds>
<ROWSET>
<ROW num="0" ><GRDOSDS_VALUE>var pubpack = new JavaPackage ( &amp;quot;com.xlsgrid.net.pub&amp;quot; );
var TABLETAG = &amp;quot;TABLE表格对象&amp;quot;;
var VIEWTAG = &amp;quot;VIEW视图对象&amp;quot;;
var VIEWCODETAG = &amp;quot;VIEW视图代码&amp;quot;;

function getdatabase(sqlid,dsid)
{
  var session = request.getSession();
  var sid = &amp;quot;hashmap_&amp;quot;+sqlid;
  var map=session.getAttribute(sid);
  if(map==null)
  {
    map = new java.util.HashMap();
    session.setAttribute(sid,map);
  }
  var keyid=dsid;
  if(dsid==&amp;quot;&amp;quot;) 
    keyid=&amp;quot;_default_&amp;quot;;
  var db = map.get(keyid);
  if(db==null)
  {
    if(dsid==&amp;quot;&amp;quot;) dsid=null;
    db = new pub.EADatabase(dsid);
    map.put(keyid,db);
    //throw new Exception(sqlid+&amp;quot;,&amp;quot;+dsid);
  }
  return db;
}

function closealldb()
{
  var session = request.getSession();
  var sid = &amp;quot;hashmap_&amp;quot;+sqlid;
  var map=session.getAttribute(sid);
  var c=0;
  if(map!=null)
  {
    var dbs = map.values().iterator();
    while(dbs.hasNext())
    {
      var db=dbs.next();
      db.Close();
      c++;
    }
  }
  return &amp;quot;&amp;quot;+c;
}

function commit()
{
   var db = getdatabase(sqlid,dsid);
   db.GetConn().commit();
   return &amp;quot;提交成功。&amp;quot;;
}

function rollback()
{
   var db = getdatabase(sqlid,dsid);
   db.GetConn().rollback();
   return &amp;quot;回滚成功。&amp;quot;;
}


//================================================================// 
// 函数：Commit
// 说明：执行SQL
// 参数：
// 返回：
// 样例：
// 作者：
// 创建日期：10/27/05 17:15:03
// 修改日志：
//================================================================// 
function Run()
{
  var sql = &amp;quot;&amp;quot;;//new String(&amp;quot;&amp;quot;);
  var i = 0;
  var db = null;
  var nRun = 0;
  var retcnt = 0;
  db = getdatabase(sqlid,dsid);//new pubpack.EADatabase();
  if ( buttontype == &amp;quot;bat&amp;quot; ) 
  {
    // 执行多个SQL，使用,分割
    for(i=0;i&amp;lt; pubpack.EAFunc.GetListCount(runsql,&amp;quot;;&amp;quot;); i++) 
    {
      sql = pubpack.EAFunc.GetListValue(runsql,&amp;quot;;&amp;quot;,i);
      if ( sql.length() &amp;gt; 0 ) 
      {
        try {
          retcnt += db.ExcecutSQL(sql);
          nRun ++;
        }
        catch ( e ) {
          throw new pubpack.EAException(&amp;quot;执行&amp;quot;+sql+&amp;quot;出错&amp;quot; + e.toString());
        }
      }
    }
  }
  else 
  {
    // 执行单个SQL
    retcnt += db.ExcecutSQL(runsql);
    nRun  = 1;
  }
  return &amp;quot;操作成功,执行了&amp;quot;+nRun +&amp;quot;条SQL语句,共操作了&amp;quot; + retcnt + &amp;quot;条数据库记录&amp;quot;;
}


//================================================================// 
// 函数：GetTableTree
// 说明：得到数据的TABLE和TREE的列表
// 参数：
// 返回：
// 样例：
// 作者：
// 创建日期：12/11/05 14:48:21
// 修改日志：
//================================================================// 
function GetTableTree()
{
   var db = getdatabase(sqlid,dsid);
        var xml = &amp;quot;&amp;quot;;
        var sql = &amp;quot;&amp;quot;;
        if( tagid==TABLETAG) 
        {
              var sql = &amp;quot;select a.table_name,a.typ,decode( INSTR(b.COMMENTS,&amp;apos;~&amp;apos;),0,b.COMMENTS,substr(b.COMMENTS,1,INSTR(COMMENTS,&amp;apos;~&amp;apos;)-1)) note,substr(b.COMMENTS,INSTR(COMMENTS,&amp;apos;~&amp;apos;)+1,length(b.comments)) comments from &amp;quot;+
                  &amp;quot;( select TABLE_NAME,&amp;apos;TABLE&amp;apos; TYP from user_tables ) &amp;quot;+
                  &amp;quot;a,user_tab_comments b &amp;quot;+
                  &amp;quot;where a.TABLE_NAME=b.table_name(+) &amp;quot;+
                  &amp;quot;order by a.TYP,a.TABLE_NAME  &amp;quot;;
              var ds = db.QuerySQL(sql);  
              var cnt = ds.getRowCount();
              for( var i=0;i&amp;lt; cnt; i ++ ) {
                    var sTableName = ds.getStringAt(i,&amp;quot;table_name&amp;quot;);
                    var sNote = ds.getStringAt(i,&amp;quot;note&amp;quot;);
                    var sComment = ds.getStringAt(i,&amp;quot;comments&amp;quot;);
                    xml+=&amp;quot;&amp;lt;&amp;quot;+sTableName +&amp;quot; conn=\&amp;quot;&amp;quot;+dsid+&amp;quot;\&amp;quot; ID=\&amp;quot;+sTableName +\&amp;quot; name=\&amp;quot;&amp;quot;+sNote +&amp;quot;\&amp;quot; comment=\&amp;quot;&amp;quot;+sComment +&amp;quot;\&amp;quot;/&amp;gt;&amp;quot;;
              }
        }
        else if ( tagid==VIEWTAG || tagid== VIEWCODETAG  ) {
              sql = &amp;quot;select a.table_name,a.typ,decode( INSTR(b.COMMENTS,&amp;apos;~&amp;apos;),0,b.COMMENTS,substr(b.COMMENTS,1,INSTR(COMMENTS,&amp;apos;~&amp;apos;)-1)) note,substr(b.COMMENTS,INSTR(COMMENTS,&amp;apos;~&amp;apos;)+1,length(b.comments)) comments  from &amp;quot;+
                  &amp;quot;( select VIEW_NAME TABLE_NAME,&amp;apos;VIEW&amp;apos; TYP from USER_VIEWS ) &amp;quot;+
                  &amp;quot;a,user_tab_comments b &amp;quot;+
                  &amp;quot;where a.TABLE_NAME=b.table_name(+) &amp;quot;+
                  &amp;quot;order by a.TYP,a.TABLE_NAME  &amp;quot;;
              var ds1 = db.QuerySQL(sql);        
              var cnt = ds1.getRowCount();
              for( var i=0;i&amp;lt; cnt; i ++ ) {
                    var sTableName = ds1.getStringAt(i,&amp;quot;table_name&amp;quot;);
                    var sNote = ds1.getStringAt(i,&amp;quot;note&amp;quot;);
                    var sComment = ds1.getStringAt(i,&amp;quot;comments&amp;quot;);
                    if ( tagid==VIEWTAG )
                          xml+=&amp;quot;&amp;lt;&amp;quot;+sTableName +&amp;quot; conn=\&amp;quot;&amp;quot;+dsid+&amp;quot;\&amp;quot; ID=\&amp;quot;&amp;quot;+sTableName +&amp;quot;\&amp;quot; name=\&amp;quot;&amp;quot;+sNote +&amp;quot;\&amp;quot; comment=\&amp;quot;&amp;quot;+sComment +&amp;quot;\&amp;quot;/&amp;gt;&amp;quot;;
                    else 
                          xml += &amp;quot;&amp;lt;&amp;quot;+sTableName +&amp;quot; conn=\&amp;quot;&amp;quot;+dsid+&amp;quot;\&amp;quot; ID=\&amp;quot;&amp;quot;+sTableName +&amp;quot;\&amp;quot; action=\&amp;quot;VIEWCODE\&amp;quot; name=\&amp;quot;&amp;quot;+sNote +&amp;quot;\&amp;quot; comment=\&amp;quot;&amp;quot;+sComment +&amp;quot;\&amp;quot;/&amp;gt;&amp;quot;;
              }
        }    
        return xml;
}


//================================================================// 
// 函数：GetColumnList
// 说明：得到某个表格的字段列表
// 参数：
// 返回：
// 样例：
// 作者：
// 创建日期：12/12/05 14:04:33
// 修改日志：
//================================================================// 
function GetColumnList()
{
   var db = getdatabase(sqlid,dsid);
        var sql = &amp;quot;select a.table_name,a.column_name,decode( INSTR(b.COMMENTS,&amp;apos;~&amp;apos;),0,b.COMMENTS,substr(b.COMMENTS,1,INSTR(COMMENTS,&amp;apos;~&amp;apos;)-1)) note,&amp;quot;+
            &amp;quot;substr(b.COMMENTS,INSTR(COMMENTS,&amp;apos;~&amp;apos;)+1,length(b.comments)) comments from &amp;quot;+
            &amp;quot;( select TABLE_NAME,COLUMN_NAME,COLUMN_ID from user_tab_columns) a,user_col_comments b &amp;quot;+
            &amp;quot;where a.TABLE_NAME=b.table_name(+) and a.COLUMN_NAME=b.COLUMN_NAME(+) and a.TABLE_NAME=&amp;apos;&amp;quot;+tablename+&amp;quot;&amp;apos; order by a.COLUMN_ID&amp;quot;;
        var ds = db.QuerySQL(sql);        
        var ret = &amp;quot;&amp;quot;;
        for( var i=0;i&amp;lt; ds.getRowCount(); i ++ ) {
              var sTableName = ds.getStringAt(i,&amp;quot;table_name&amp;quot;);
              var sColumnName = ds.getStringAt(i,&amp;quot;column_name&amp;quot;);
              var sNote = ds.getStringAt(i,&amp;quot;note&amp;quot;);
              var sComment = ds.getStringAt(i,&amp;quot;comments&amp;quot;);
              if ( i!=0 ) ret +=&amp;quot;,\t&amp;quot;;
              ret+= sColumnName ;
              if ( sNote.length() &amp;gt;16 ) sNote = sNote.substring(0,16);
              if ( sNote.length() &amp;gt; 0 ) ret+= &amp;quot; AS \&amp;quot;&amp;quot; + sNote +&amp;quot;\&amp;quot;&amp;quot; ;
              ret +=&amp;quot;\n&amp;quot; ;
        }
        return ret;
}
//================================================================// 
// 函数：GetViewCode
// 说明：得到视图的代码
// 参数：
// 返回：
// 样例：
// 作者：
// 创建日期：04/02/06 15:57:54
// 修改日志：
//================================================================// 
function GetViewCode()
{
   var db = getdatabase(sqlid,dsid);
        var sql = &amp;quot;select TEXT from user_views where view_name=&amp;apos;&amp;quot;+tablename+&amp;quot;&amp;apos;&amp;quot;;
        var ds = db.QuerySQL(sql);        
        if ( ds.getRowCount()&amp;gt; 0 ) 
              return ds.getStringAt(0,&amp;quot;TEXT&amp;quot;);
        else return &amp;quot;&amp;quot;;
}
//================================================================// 
// 函数：Commit
// 说明：执行SQL
// 参数：
// 返回：
// 样例：
// 作者：
// 创建日期：10/27/05 17:15:03
// 修改日志：
//================================================================// 
function QuerySQL()
{
<<<<<<< SQLINPUT.xml
      return pubpack.EADbTool.pageDS(runsql,pageno,pagesize).GetXml();//.QuerySQL(runsql).GetXml();
=======
   var db = getdatabase(sqlid,dsid);
   return db.pageDS(runsql,pageno,pagesize).GetXml();//.QuerySQL(runsql).GetXml();
>>>>>>> 1.9
}

function GetSQL()
{
   var db = getdatabase(sqlid,dsid);
   return db.GetSQL(runsql);
}

//在Head区引用额外脚本
function addHeaderHtml(mwobj,request,sb,usrinfo)
//var sb = new java.lang.StringBuffer();var usrinfo = new web.EAUserinfo();
{
  var sql = &amp;quot;select ID,NAME from v_dblist&amp;quot;;
  var ds;
  try{
    ds = pub.EADbTool.QuerySQL(sql);
  }catch(e){ ds = new pub.EAXmlDS();}
  //var ds= new pub.EAXmlDS();
  ds.AddNullRow(-1);
  ds.setValueAt(0,&amp;quot;id&amp;quot;,&amp;quot;&amp;quot;);
  ds.setValueAt(0,&amp;quot;name&amp;quot;,&amp;quot;默认连接&amp;quot;);
  var c=ds.getRowCount();
  sb.append(&amp;quot;&amp;lt;script&amp;gt;\nvar treexml=\&amp;quot;&amp;lt;数据库&amp;gt;&amp;quot;);
  for(var i=0;i&amp;lt;c;i++)
  {
    var connid=ds.getStringAt(i,&amp;quot;id&amp;quot;);
    sb.append(&amp;quot;&amp;lt;&amp;quot;);sb.append(ds.getStringAt(i,&amp;quot;name&amp;quot;));sb.append(&amp;quot; conn=\\\&amp;quot;&amp;quot;+connid+&amp;quot;\\\&amp;quot;&amp;gt;&amp;quot;);
    sb.append(&amp;quot;&amp;lt;&amp;quot;+TABLETAG +&amp;quot; conn=\\\&amp;quot;&amp;quot;+connid+&amp;quot;\\\&amp;quot;/&amp;gt;&amp;quot;);
    sb.append(&amp;quot;&amp;lt;&amp;quot;+VIEWTAG+&amp;quot; conn=\\\&amp;quot;&amp;quot;+connid+&amp;quot;\\\&amp;quot;/&amp;gt;&amp;quot;);
    sb.append(&amp;quot;&amp;lt;&amp;quot;+VIEWCODETAG+&amp;quot; conn=\\\&amp;quot;&amp;quot;+connid+&amp;quot;\\\&amp;quot;/&amp;gt;&amp;quot;);
    sb.append(&amp;quot;&amp;lt;/&amp;quot;);sb.append(ds.getStringAt(i,&amp;quot;name&amp;quot;));sb.append(&amp;quot;&amp;gt;&amp;quot;);
  }
  sb.append(&amp;quot;&amp;lt;/数据库&amp;gt;\&amp;quot;;\n&amp;quot;);
  sb.append(&amp;quot;\nvar G_DSID=\&amp;quot;\&amp;quot;;&amp;quot;);
  sb.append(&amp;quot;\nvar G_DSNAME=\&amp;quot;默认连接\&amp;quot;;&amp;quot;);
  var sqlid=pub.EAFunc.DateToStr(new java.util.Date(),&amp;quot;MMddHHmmssSSS&amp;quot;);
  sb.append(&amp;quot;\nvar G_SQLID=\&amp;quot;&amp;quot;+sqlid+&amp;quot;\&amp;quot;;&amp;quot;);
  sb.append(&amp;quot;&amp;lt;/script&amp;gt;&amp;quot;);
}

</GRDOSDS_VALUE></ROW>
</ROWSET>
</grdosds><fldhdr>
<ROWSET>
<ROW num="0" ><BILID>1单据编号</BILID><SUBTYP>0子类型</SUBTYP><CORPID>0往来单位编号</CORPID><CORPNAM>0往来单位名称</CORPNAM><LOCID>0仓库|部门编号</LOCID><LOCNAM>0仓库|部门名称</LOCNAM><DAT>0单据日期</DAT><CRTUSR>1录入人</CRTUSR><CRTUSRNAM>0录入人姓名</CRTUSRNAM><CRTDAT>0录入日期</CRTDAT><CHKUSR>1审核人</CHKUSR><CHKUSRNAM>0审核人姓名</CHKUSRNAM><CHKDAT>0审核日期</CHKDAT><REFID1>0参考编号1</REFID1><REFNAM1>0参考名称1</REFNAM1><REFID2>0参考编号2</REFID2><REFNAM2>0参考名称2</REFNAM2><NOTE>0备注信息</NOTE></ROW>
</ROWSET>
</fldhdr><flddtl>
<ROWSET>
<ROW num="0" ><SEQID>1明细序号</SEQID><ITMID>1品种编号</ITMID><ITMNAM>0品种名称</ITMNAM><ITMSPC>0规格</ITMSPC><UNIT>0计量单位</UNIT><PRICE>0价格</PRICE><QTY>0数量</QTY><TAXTYP>0税率类型</TAXTYP><NOTAXMNY>0不含税税额</NOTAXMNY><TAXMNY>0税额</TAXMNY><MNY>0下单金额</MNY><REFID1>0参考编号1</REFID1><REFNAM1>0参考名称1</REFNAM1><REFID2>0参考编号2</REFID2><REFNAM2>0参考名称2</REFNAM2></ROW>
</ROWSET>
</flddtl></mdroot>