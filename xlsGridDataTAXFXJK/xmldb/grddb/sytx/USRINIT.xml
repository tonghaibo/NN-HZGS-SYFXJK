<?xml version='1.0' encoding='GBK'?><mdroot><grdds>
<ROWSET>
<ROW num="0" ><MWTYP >M</MWTYP><MWID >USRINIT</MWID><NAME >USBKEY初始化</NAME><NOTE ></NOTE><NOACCNAME ></NOACCNAME><FILE >USRINIT.zxg</FILE><SCENE ></SCENE><FIXED ></FIXED><CATTYP ></CATTYP><DTLRNG ></DTLRNG><BATINP ></BATINP><MANUNIT ></MANUNIT><USESMLUNT ></USESMLUNT><ITEMTABLE ></ITEMTABLE><BILHDRTABLE ></BILHDRTABLE><BILDTLTABLE ></BILDTLTABLE><COLLIST ></COLLIST><WHERE ></WHERE><ORDER ></ORDER><DBNAME ></DBNAME><LISTSUM ></LISTSUM><LOADDATA ></LOADDATA><CHECKTITLE ></CHECKTITLE><IFBILL ></IFBILL><EXTJS ></EXTJS><JAVACLS ></JAVACLS><POST2MWID ></POST2MWID><LMS ></LMS><WIDTHMOD >1</WIDTHMOD><HEIGHTMOD ></HEIGHTMOD><syt >x</syt></ROW>
</ROWSET>
</grdds><grdbtnds>
<ROWSET>
<ROW num="0" ><ID >Verify</ID><NAME >检查USBKEY</NAME><ACTTYP ></ACTTYP><URL ></URL><URLTARGET ></URLTARGET><TIP ></TIP><BTNORD ></BTNORD><IMG ></IMG><IMGMOUSE ></IMGMOUSE><C10 >Verify</C10></ROW>
</ROWSET>
</grdbtnds><grdjsds>
<ROWSET>
<ROW num="0" ><GRDJSDS_VALUE >//数据加载完毕
//输入参数thisuserid= 
function _thisOnpost_loaddata(sheet)
{
      var uk_listid = _this.CreateListValue();  //创建键值  
      QuerySQLDS(&amp;quot;select &amp;apos;EPass&amp;apos; id,&amp;apos;飞天&amp;apos; name  from dual  union all select &amp;apos;OTHER&amp;apos; id,&amp;apos;其它&amp;apos; name  from dual &amp;quot;);   
      var count = _this.XMLDS_GetRowCount(); 
      var id = &amp;quot;&amp;quot;; 
      var name = &amp;quot;&amp;quot;; 
      if(count &amp;gt; 0) 
      {
              for (var i=0;i&amp;lt;count ;i++) 
              {
                    id = _this.XMLDS_GetString(i,&amp;quot;id&amp;quot;); 
                    name = _this.XMLDS_GetString(i,&amp;quot;name&amp;quot;); 
                    _this.SetListValue(uk_listid,id,name);  
              }
       }     
      _this.SetTocomboBox(&amp;quot;uk_listid&amp;quot;,sheet,2,2,uk_listid);  
      _this.SetCellText(sheet,2,2,&amp;quot;EPass&amp;quot;); //1是不更改            
      
      //var usrlist =_this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_USR&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);
  
      //_this.SetToComboBox(&amp;quot;&amp;quot;,sheet,1,2,usrlist);    
       try {
       		_this.SetCellText(0,1,2,thisuserid);
       		_this.SetCellShowText(0,1,2,invokeOSFunc(&amp;quot;GetUsername&amp;quot;,&amp;quot;usrid=&amp;quot;+thisuserid) );

       }catch ( e ) {
       }
	_this.SetCellText(0,5,2,_this.GetCellShowText(0,1,2) );

}

function Verify()
{
	
	var appname =  G_SYTID;
	appname = invokeOSFunc(&amp;quot;GetAppname&amp;quot;,&amp;quot;&amp;quot;) ;

	var usrname = _this.GetCellText(0,1,2);
	if( usrname == &amp;quot;&amp;quot;) {
		alert ( &amp;quot;请输入用户名&amp;quot;);
		return;
	}
	
	/*var key1=_this.GetCellText(0,3,2);
	if( key1== &amp;quot;&amp;quot;) {
		alert ( &amp;quot;请输入KEY&amp;quot;);
		return;
	}

*/
	try{
    showmsg(&amp;quot;打开USB设备...&amp;quot;);
    _this.FT_OpenDevice();
    showmsg(&amp;quot;找到！\r\n&amp;quot;);

    var sernum=_this.FT_GetSERNUM();
	
    //if(sernum!=&amp;quot;&amp;quot;)
    //  showmsg(&amp;quot;得到序列号：&amp;quot;,sernum);		//要和保存在数据库里面的用户号做比较
  
  //	showmsg(&amp;quot;切换状态...&amp;quot;,_this.FT_ResetSecurityState(0));
    showmsg(&amp;quot;检查设备合法性：&amp;quot;);
	
	    _this.FT_VerifyPIN(appname );

    showmsg(&amp;quot;通过！\r\n&amp;quot;);

    _this.FT_ChangeDir(appname );
    
//    _this.FT_OpenFile(1);
//    showmsg(&amp;quot;运算...\r\n&amp;quot;);			
//    ret=_this.FT_HashToken(2,&amp;quot;&amp;lt;%=RndData%&amp;gt;&amp;quot;)
//
//    _this.FT_CloseDevice();
//    alert( ret );
//    document.all(&amp;quot;USBKEY_KEYVAL&amp;quot;).value=ret;
//    document.all(&amp;quot;USBKEY_SERNUM&amp;quot;).value=sernum;
//    showmsg(&amp;quot;正在登录...&amp;quot;);		
//    f1.submit();
    
  }
  catch ( e ){
    alert ( e.message );
    showmsg(&amp;quot;\r\n&amp;quot;);
    showmsg(e.message);		
  }	
}

function Init()
{
	var appname = invokeOSFunc(&amp;quot;GetAppname&amp;quot;,&amp;quot;&amp;quot;) ;

	var usrname = _this.GetCellText(0,1,2);
	if( usrname == &amp;quot;&amp;quot;) {
		alert ( &amp;quot;请输入用户名&amp;quot;);
		return;
	}
	var keytyp = _this.GetCellText(0,2,2);
	var key1=_this.GetCellText(0,3,2);
	var key2=_this.GetCellText(0,4,2);
	var myusername=_this.GetCellText(0,5,2);

	
//	alert(&amp;quot;&amp;usrname=&amp;quot;+usrname+&amp;quot;key2=&amp;quot;+key2+&amp;quot;&amp;keytyp=&amp;quot;+keytyp);	
	if(key1!=key2){
		alert ( &amp;quot;2次输入的KEY值不对&amp;quot; );
		return;
	}
	if( key1== &amp;quot;&amp;quot;) {
		alert ( &amp;quot;请输入KEY&amp;quot;);
		return;
	}

//	var ret = &amp;quot;初始化===========\r&amp;quot;;
//	try {
//		showmsg( &amp;quot;版本序号：&amp;quot;+_this.FT_GetLibVersion()+&amp;quot;\r&amp;quot;);  //16842752
//	}catch ( e ){
//		alert( &amp;quot;硕格控件请升级到6.0以上版本&amp;quot; );
//		return ;
//	}
//	showmsg(&amp;quot;打开设备...&amp;quot;+_this.FT_OpenDevice()+&amp;quot;\r&amp;quot;);
//	showmsg(&amp;quot;初始化...&amp;quot;+_this.FT_Init(appname,key1)+&amp;quot;\r&amp;quot;);	
//	var sernum = this.FT_GetSERNUM();
//	showmsg(&amp;quot;关闭设备：&amp;quot;+_this.FT_CloseDevice()+&amp;quot;\r&amp;quot;);	
//	alert(&amp;quot;sernum=&amp;quot;+sernum+&amp;quot;&amp;usrname=&amp;quot;+usrname+&amp;quot;key2=&amp;quot;+key2+&amp;quot;&amp;keytyp=&amp;quot;+keytyp);	
//	 var no=invokeOSFunc(&amp;quot;InitUK&amp;quot;,&amp;quot;sernum=&amp;quot;+sernum+&amp;quot;&amp;usrname=&amp;quot;+usrname+&amp;quot;key2=&amp;quot;+key2+&amp;quot;&amp;keytyp=&amp;quot;+keytyp);

	
	try{
	    showmsg(&amp;quot;打开USB设备...&amp;quot;);
	    _this.FT_OpenDevice();
	    showmsg(&amp;quot;找到！\r\n&amp;quot;);
	
	    var sernum=_this.FT_GetSERNUM();
		
//	    if(sernum!=&amp;quot;&amp;quot;)
// 		showmsg(&amp;quot;得到序列号：&amp;quot;+sernum);		//要和保存在数据库里面的用户号做比较
//	    alert(sernum);
// 	    showmsg(&amp;quot;切换状态...&amp;quot;,_this.FT_ResetSecurityState(0));
	    showmsg(&amp;quot;检查设备合法性：&amp;quot;);	
	   
		    _this.FT_VerifyPIN(appname );

	    showmsg(&amp;quot;通过！\r\n\r&amp;quot;);

	    _this.FT_ChangeDir(appname );

	    _this.FT_Init(appname,key1);

	    _this.FT_CloseDevice();
	    showmsg(&amp;quot;初始化完成！\r\n\r&amp;quot;);
	    var ret = invokeOSFunc(&amp;quot;InitUK&amp;quot;,&amp;quot;sernum=&amp;quot;+sernum+&amp;quot;&amp;usrname=&amp;quot;+usrname+&amp;quot;&amp;key2=&amp;quot;+key2+&amp;quot;&amp;keytyp=&amp;quot;+keytyp+&amp;quot;&amp;myusername=&amp;quot;+myusername+&amp;quot;&amp;appname=&amp;quot;+appname );
//	    alert(ret)	;

  }
  catch ( e ){
	    alert ( e.message );
	    showmsg(&amp;quot;\r\n&amp;quot;);
	    showmsg(e.message);	
	    return -1;	
  }	

	

}
//点击按钮
function _thisOnButtonCtrlClick(id,sheet,row,col)
{


	if( id == &amp;quot;设置为UKEY认证用户&amp;quot;){
		Init();
		
	
	} 
	else if ( id==&amp;quot;暂停一天用户UKEY认证&amp;quot;) {
		var usrname = _this.GetCellText(0,1,2);
		var ret = &amp;quot;&amp;quot;;
		
		ret=invokeOSFunc(&amp;quot;PauseUser&amp;quot;,&amp;quot;usrid=&amp;quot;+usrname+&amp;quot;&amp;action=&amp;quot;);
		
		if ( ret==&amp;quot;该用户当天的暂停操作已经做过了&amp;quot; ) {
			if ( confirm( ret+&amp;quot;,是否要删除该暂停记录?&amp;quot; )==1 ){
				alert (invokeOSFunc(&amp;quot;PauseUser&amp;quot;,&amp;quot;usrid=&amp;quot;+usrname+&amp;quot;&amp;action=delete&amp;quot;));
			}
		}
		else alert (  ret );
	}
	else if( id == &amp;quot;取消用户UKEY认证&amp;quot;){
		var appname = invokeOSFunc(&amp;quot;GetAppname&amp;quot;,&amp;quot;&amp;quot;) ;
		var usrname = _this.GetCellText(0,1,2);
		if( usrname == &amp;quot;&amp;quot;) {
			alert ( &amp;quot;请输入用户名&amp;quot;);
			return;
		}
		try{
			_this.FT_OpenDevice();
			var sernum=_this.FT_GetSERNUM();
			var userinfo = invokeOSFunc(&amp;quot;QueryUser&amp;quot;,&amp;quot;usrid=&amp;quot;+usrname +&amp;quot;&amp;sernum=&amp;quot;+sernum) ;
			if(userinfo ==&amp;quot;NULL&amp;quot;) {
				alert ( &amp;quot;您的USBKEY已经插入，该用户、该KEY没有登录的认证信息，无需删除&amp;quot; );
				return ;
			}
			else {
				if (confirm( &amp;quot;您的USBKEY已经插入，本次操作将删除与本KEY序列号（如果该用户有多个USBKEY,其他认证不受影响），是否继续？&amp;quot; )==1 ) {
					alert( invokeOSFunc(&amp;quot;UnInitUK&amp;quot;,&amp;quot;sernum=&amp;quot;+sernum+&amp;quot;&amp;usrname=&amp;quot;+usrname) );
				}

			}
			
		}
		catch ( e ){
			
			var userinfo = invokeOSFunc(&amp;quot;QueryUser&amp;quot;,&amp;quot;usrid=&amp;quot;+usrname +&amp;quot;&amp;sernum=&amp;quot;) ;
			if(userinfo ==&amp;quot;NULL&amp;quot;) {
				alert ( &amp;quot;该用户没有登录的认证信息，无需删除&amp;quot; );
				return ;
			}

			
			if (confirm( &amp;quot;本次操作将删除该用户的所有登录认证,该用户登录系统将不再受保护，是否继续？&amp;quot; )==1 ) {
				alert(invokeOSFunc(&amp;quot;UnInitUK&amp;quot;,&amp;quot;sernum=&amp;usrname=&amp;quot;+usrname));
			}
		}	
		
	}
	else if( id == &amp;quot;查询用户UKEY认证情况&amp;quot;){
		var appname = invokeOSFunc(&amp;quot;GetAppname&amp;quot;,&amp;quot;&amp;quot;) ;
		var usrname = _this.GetCellText(0,1,2);
		if( usrname == &amp;quot;&amp;quot;) {
			alert ( &amp;quot;请输入用户名&amp;quot;);
			return;
		}
		var userinfo = invokeOSFunc(&amp;quot;QueryUser&amp;quot;,&amp;quot;usrid=&amp;quot;+usrname +&amp;quot;&amp;sernum=&amp;quot;) ;

		if( userinfo == &amp;quot;NULL&amp;quot;  ) {
			alert ( &amp;quot;提示，该用户没有绑定USBKEY！&amp;quot; );
		}
		else  {
			alert ( &amp;quot;提示，该用户已绑定USBKEY，用户别名是&amp;quot;+userinfo +&amp;quot;&amp;quot; );
		}
			
	
		

	}
	else if ( id==&amp;quot;检查USBKEY&amp;quot;){
		Verify();
	}
}

function showmsg(msg)
{
	_this.SetCellText(0,8,1,_this.GetCellText(0,8,1)+msg);
}
//修改单元格内容
function _thisOnCellModify(sheet,row,col,oldvalue,newvalue)
{
	if(row==1&amp;&amp;col==2) 
	  _this.SetCellText(0,5,2,_this.GetCellShowText(0,1,2) );

}

</GRDJSDS_VALUE></ROW>
</ROWSET>
</grdjsds><grdosds>
<ROWSET>
<ROW num="0" ><GRDOSDS_VALUE >var pubpack = new JavaPackage(&amp;quot;com.xlsgrid.net.pub&amp;quot;);
function InitUK()
{
  var newNo = &amp;quot;&amp;quot;;
  var db = null;
//  var USBKEY_APPNAME = pubpack.EAOption.get(&amp;quot;USBKEY_APPNAME&amp;quot;);
  try
  {  
    db = new pubpack.EADatabase();	// 如果连接到其他数据库, new pubpack.EADatabase(“dbname”)	
    var sql = &amp;quot;&amp;quot;;
    var ds = db.QuerySQL(&amp;quot;select * from usrkey where usrid=&amp;apos;&amp;quot;+usrname+&amp;quot;&amp;apos;  and SERNUM=&amp;apos;&amp;quot;+sernum+&amp;quot;&amp;apos;&amp;quot;);
    if ( ds.getRowCount()&amp;gt;0 ) {
    	db.ExcecutSQL(&amp;quot;delete from usrkey where usrid=&amp;apos;&amp;quot;+usrname+&amp;quot;&amp;apos; and SERNUM=&amp;apos;&amp;quot;+sernum+&amp;quot;&amp;apos;&amp;quot; );
    }
    try{
    	sql=&amp;quot; insert into usrkey(usrid,usbkeytyp,keyval,sernum,username,appname ) values (&amp;apos;&amp;quot;+usrname+&amp;quot;&amp;apos;,&amp;apos;&amp;quot;+keytyp+&amp;quot;&amp;apos;,&amp;apos;&amp;quot;+key2+&amp;quot;&amp;apos;,&amp;apos;&amp;quot;+sernum+&amp;quot;&amp;apos;,&amp;apos;&amp;quot;+myusername+&amp;quot;&amp;apos;,&amp;apos;&amp;quot;+appname +&amp;quot;&amp;apos;) &amp;quot;;
    	
    	db.ExcecutSQL(sql);
    }
    catch( e )
    {
            //try{db.ExcecutSQL(&amp;quot;drop table usrkey&amp;quot;);}catch( e1 ){       }
            try{
            	db.ExcecutSQL(&amp;quot;create table usrkey(guid char(32) default sys_guid() primary key ,usrid varchar2(20) not null,usbkeytyp varchar2(20), keyval varchar2(256), sernum varchar2(32),username varchar2(20),appname varchar2(20) )&amp;quot;);
            }
            catch( ee1 ){
              
            }
            db.ExcecutSQL(sql);

    }
    
//    throw new Exception(sql);
 

  }
  catch ( ee ) {
		db.Rollback();
		throw new Exception ( ee.toString() );
  }
  finally {
		if (db!=null) db.Close();
 }
 return &amp;quot;sucess&amp;quot;;
}

function UnInitUK()
{
  var newNo = &amp;quot;&amp;quot;;
  var db = null;
//  var USBKEY_APPNAME = pubpack.EAOption.get(&amp;quot;USBKEY_APPNAME&amp;quot;);
  try
  {  
    db = new pubpack.EADatabase();	// 如果连接到其他数据库, new pubpack.EADatabase(“dbname”)	
    var sql = &amp;quot; delete from  usrkey where usrid=&amp;apos;&amp;quot;+usrname+&amp;quot;&amp;apos; and sernum=&amp;apos;&amp;quot;+sernum+&amp;quot;&amp;apos; &amp;quot;;
    if( sernum==&amp;quot;&amp;quot; ) 
    	sql = &amp;quot; delete from  usrkey where usrid=&amp;apos;&amp;quot;+usrname+&amp;quot;&amp;apos; &amp;quot;;
	
//    throw new Exception(sql);
    var cnt = db.ExcecutSQL(sql);
	return &amp;quot;操作成功，操作了&amp;quot;+cnt + &amp;quot;笔记录&amp;quot; ; 
  }
  catch ( ee ) {
		db.Rollback();
		throw new Exception ( ee.toString() );
		
  }
  finally {
		if (db!=null) db.Close();
 }
 return &amp;quot;&amp;quot;;
}
//查询用户的登记情况
function QueryUser()
{
	var newNo = &amp;quot;&amp;quot;;
	var db = null;
	var ret = &amp;quot;NULL&amp;quot;;


	  try
	  {  
		db = new pubpack.EADatabase();	// 如果连接到其他数据库, new pubpack.EADatabase(“dbname”)	
	    var sql = &amp;quot; select * from  usrkey where usrid=&amp;apos;&amp;quot;+usrid+&amp;quot;&amp;apos; and nvl(sernum,&amp;apos; &amp;apos;) like &amp;apos;&amp;quot;+sernum+&amp;quot;%&amp;apos; &amp;quot;;
	    var ds = db.QuerySQL(sql);
//	    
		if ( ds.getRowCount()&amp;gt;0 ) ret = &amp;quot;&amp;quot;;
		
	    for ( var i=0;i&amp;lt;ds.getRowCount();i++ ) {
	   	ret += &amp;quot;&amp;quot;+(i+1)+&amp;quot;.&amp;quot;+ds.getStringAt(i,&amp;quot;USERNAME&amp;quot;)+&amp;quot;(&amp;quot;+ds.getStringAt(i,&amp;quot;APPNAME&amp;quot;)+&amp;quot;)\r\n&amp;quot;;
	    }
  }
	  catch ( ee ) {
		throw new Exception ( ee.toString() );
			
	  }
	  finally {
			if (db!=null) db.Close();
	 }
	 return ret;
}
function GetUsername()
{
	var newNo = &amp;quot;&amp;quot;;
	var db = null;
	var ret = usrid;


	  try
	  {  
		db = new pubpack.EADatabase();	// 如果连接到其他数据库, new pubpack.EADatabase(“dbname”)	
	    var sql = &amp;quot; select * from  usr where id=&amp;apos;&amp;quot;+usrid+&amp;quot;&amp;apos;  &amp;quot;;
	    var ds = db.QuerySQL(sql);
//	    
		if ( ds.getRowCount()&amp;gt;0 ) return ds.getStringAt(0,&amp;quot;NAME&amp;quot;);

  }
	  catch ( ee ) {
		throw new Exception ( ee.toString() );
			
	  }
	  finally {
			if (db!=null) db.Close();
	 }
	 return ret;
}
//暂停一天
function PauseUser()
{
	var newNo = &amp;quot;&amp;quot;;
	var db = null;
	var ret = usrid;


	  try
	  {  
		db = new pubpack.EADatabase();	// 如果连接到其他数据库, new pubpack.EADatabase(“dbname”)	
		    var sql = &amp;quot; select * from  usrkeypause where usrid=&amp;apos;&amp;quot;+usrid+&amp;quot;&amp;apos; and to_char(crtdat,&amp;apos;YYYY-MM-DD&amp;apos;)=to_char(sysdate,&amp;apos;YYYY-MM-DD&amp;apos;) &amp;quot;;
		    var ds = null;
		    try{
			    ds = db.QuerySQL(sql);
		    }
		    catch ( ee ) {
		    	db.ExcecutSQL(&amp;quot;create table usrkeypause (guid char(32) default sys_guid() primary key ,usrid varchar2(20),crtdat date default sysdate)&amp;quot;);
		    	ds = db.QuerySQL(sql);

		    }
		    if ( action==&amp;quot;delete&amp;quot; ) {
		    	db.ExcecutSQL(&amp;quot;delete from usrkeypause where usrid=&amp;apos;&amp;quot;+usrid+&amp;quot;&amp;apos; and to_char(crtdat,&amp;apos;YYYY-MM-DD&amp;apos;)=to_char(sysdate,&amp;apos;YYYY-MM-DD&amp;apos;) &amp;quot;);
		    	ret = &amp;quot;取消暂停成功&amp;quot;;
		    }
		    else {
			    if (ds.getRowCount()&amp;gt;0 )
			    	ret = &amp;quot;该用户当天的暂停操作已经做过了&amp;quot; ;  
			    else {
				    db.ExcecutSQL(&amp;quot;insert into usrkeypause ( usrid ) values(&amp;apos;&amp;quot;+usrid+&amp;quot;&amp;apos;)&amp;quot;);
				    ret = &amp;quot;操作成功&amp;quot;;
			    }
		    }
		    db.Commit();
		    
			

	  }
	  catch ( ee ) {
		throw new Exception ( ee.toString() );
			
	  }
	  finally {
			if (db!=null) db.Close();
	 }
	 return ret;
}
function GetAppname()
{
	return pubpack.EAOption.get(&amp;quot;USBKEY_APPNAME&amp;quot;);
}
</GRDOSDS_VALUE></ROW>
</ROWSET>
</grdosds><fldhdr>
<ROWSET>
<ROW num="0" ><BILID >1单据编号</BILID><STAT >0单据状态</STAT><SUBTYP >0子类型</SUBTYP><CORPID >0往来单位编号</CORPID><CORPNAM >0往来单位名称</CORPNAM><LOCID >0仓库|部门编号</LOCID><LOCNAM >0仓库|部门名称</LOCNAM><DAT >0单据日期</DAT><CRTUSR >1录入人</CRTUSR><CRTUSRNAM >0录入人姓名</CRTUSRNAM><CRTDAT >0录入日期</CRTDAT><CHKUSR >1审核人</CHKUSR><CHKUSRNAM >0审核人姓名</CHKUSRNAM><CHKDAT >0审核日期</CHKDAT><SUMQTY >0合计金额</SUMQTY><SUMMNY >0合计金额</SUMMNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5><REFID6 >0扩展字段</REFID6><REFNAM6 >0扩展字段</REFNAM6><NOTE >0备注</NOTE></ROW>
</ROWSET>
</fldhdr><flddtl>
<ROWSET>
<ROW num="0" ><SEQID >1明细序号</SEQID><ITMID >1品种编号</ITMID><ITMNAM >0品种名称</ITMNAM><ITEMPC >0品种批次号</ITEMPC><ITMSPC >0规格</ITMSPC><UNIT >0计量单位</UNIT><SMLUNT >0小计量单位</SMLUNT><UNTNUM >0大单位转小单位因子</UNTNUM><PRICE >0价格</PRICE><QTY >0数量</QTY><TAXTYP >0税率类型</TAXTYP><NOTAXMNY >0不含税税额</NOTAXMNY><TAXMNY >0税额</TAXMNY><MNY >0下单金额</MNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5></ROW>
</ROWSET>
</flddtl></mdroot>